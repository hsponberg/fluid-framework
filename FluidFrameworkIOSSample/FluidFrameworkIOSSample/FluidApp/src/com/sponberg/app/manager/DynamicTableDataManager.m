//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-delomboked/com/sponberg/app/manager/DynamicTableDataManager.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/sponberg/app/manager/DynamicTableDataManager.h"
#include "com/sponberg/fluid/layout/TableList.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/util/Arrays.h"

@implementation FADynamicTableDataManager

- (id)init {
  if (self = [super init]) {
    data_ = [[FFTTableList alloc] init];
    long long int ctr = 0;
    FADynamicTableDataManager_RowData *rowData = [[FADynamicTableDataManager_RowData alloc] initWithLong:ctr++];
    rowData->lines_ = [IOSObjectArray arrayWithObjects:(id[]){ @"A", @"B", @"C" } count:3 type:[IOSClass classWithClass:[NSString class]]];
    [data_ addWithId:rowData];
    rowData = [[FADynamicTableDataManager_RowData alloc] initWithLong:ctr++];
    rowData->lines_ = [IOSObjectArray arrayWithObjects:(id[]){ @"G" } count:1 type:[IOSClass classWithClass:[NSString class]]];
    [data_ addWithId:rowData];
    rowData = [[FADynamicTableDataManager_RowData alloc] initWithLong:ctr++];
    rowData->lines_ = [IOSObjectArray arrayWithObjects:(id[]){ @"W", @"X", @"Y", @"Z" } count:4 type:[IOSClass classWithClass:[NSString class]]];
    [data_ addWithId:rowData];
    rowData = [[FADynamicTableDataManager_RowData alloc] initWithLong:ctr++];
    rowData->lines_ = [IOSObjectArray arrayWithObjects:(id[]){ @"J", @"K" } count:2 type:[IOSClass classWithClass:[NSString class]]];
    [data_ addWithId:rowData];
    rowData = [[FADynamicTableDataManager_RowData alloc] initWithLong:ctr++];
    rowData->lines_ = [IOSObjectArray arrayWithObjects:(id[]){ @"<b>Lorem</> <i>ipsum</> <u>dolor</> sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.", @"2" } count:2 type:[IOSClass classWithClass:[NSString class]]];
    [data_ addWithId:rowData];
    rowData = [[FADynamicTableDataManager_RowData alloc] initWithLong:ctr++];
    rowData->lines_ = [IOSObjectArray arrayWithObjects:(id[]){ @"1", @"2", @"3", @"4", @"5", @"6" } count:6 type:[IOSClass classWithClass:[NSString class]]];
    [data_ addWithId:rowData];
    rowData = [[FADynamicTableDataManager_RowData alloc] initWithLong:ctr++];
    rowData->lines_ = [IOSObjectArray arrayWithObjects:(id[]){ @"Start", @"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.", @"End" } count:3 type:[IOSClass classWithClass:[NSString class]]];
    [data_ addWithId:rowData];
    rowData = [[FADynamicTableDataManager_RowData alloc] initWithLong:ctr++];
    rowData->lines_ = [IOSObjectArray arrayWithObjects:(id[]){ @"1", @"2", @"3" } count:3 type:[IOSClass classWithClass:[NSString class]]];
    [data_ addWithId:rowData];
  }
  return self;
}

- (FFTTableList *)getData {
  return self->data_;
}

- (void)setDataWithFFTTableList:(FFTTableList *)data {
  self->data_ = data;
}

- (BOOL)isEqual:(id)o {
  if (o == self) return YES;
  if (!([o isKindOfClass:[FADynamicTableDataManager class]])) return NO;
  FADynamicTableDataManager *other = (FADynamicTableDataManager *) check_class_cast(o, [FADynamicTableDataManager class]);
  if (![((FADynamicTableDataManager *) nil_chk(other)) canEqualWithId:(id) check_class_cast(self, [NSObject class])]) return NO;
  id this$data = [self getData];
  id other$data = [other getData];
  if (this$data == nil ? other$data != nil : ![this$data isEqual:other$data]) return NO;
  return YES;
}

- (BOOL)canEqualWithId:(id)other {
  return [other isKindOfClass:[FADynamicTableDataManager class]];
}

- (NSUInteger)hash {
  int PRIME = 59;
  int result = 1;
  id $data = [self getData];
  result = result * PRIME + ($data == nil ? 0 : ((int) [$data hash]));
  return result;
}

- (NSString *)description {
  return [NSString stringWithFormat:@"DynamicTableDataManager(data=%@)", [self getData]];
}

- (void)copyAllFieldsTo:(FADynamicTableDataManager *)other {
  [super copyAllFieldsTo:other];
  other->data_ = data_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "init", "DynamicTableDataManager", NULL, 0x1, NULL },
    { "getData", NULL, "Lcom.sponberg.fluid.layout.TableList;", 0x1, NULL },
    { "setDataWithFFTTableList:", "setData", "V", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "canEqualWithId:", "canEqual", "Z", 0x4, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "data_", NULL, 0x0, "Lcom.sponberg.fluid.layout.TableList;", NULL,  },
  };
  static J2ObjcClassInfo _FADynamicTableDataManager = { "DynamicTableDataManager", "com.sponberg.app.manager", NULL, 0x1, 7, methods, 1, fields, 0, NULL};
  return &_FADynamicTableDataManager;
}

@end

@implementation FADynamicTableDataManager_RowData

- (id)initWithLong:(long long int)id_ {
  if (self = [super init]) {
    self->id__ = id_;
  }
  return self;
}

- (BOOL)getShowLineWithNSString:(NSString *)index {
  int i = [JavaLangInteger parseIntWithNSString:index];
  return (int) [((IOSObjectArray *) nil_chk(lines_)) count] > i;
}

- (NSString *)getLineWithNSString:(NSString *)index {
  int i = [JavaLangInteger parseIntWithNSString:index];
  if ((int) [((IOSObjectArray *) nil_chk(lines_)) count] > i) {
    return IOSObjectArray_Get(lines_, i);
  }
  else {
    return @"";
  }
}

- (JavaLangLong *)getFluidTableRowObjectId {
  return [JavaLangLong valueOfWithLong:id__];
}

- (IOSObjectArray *)getLines {
  return self->lines_;
}

- (long long int)getId {
  return self->id__;
}

- (void)setLinesWithNSStringArray:(IOSObjectArray *)lines {
  self->lines_ = lines;
}

- (BOOL)isEqual:(id)o {
  if (o == self) return YES;
  if (!([o isKindOfClass:[FADynamicTableDataManager_RowData class]])) return NO;
  FADynamicTableDataManager_RowData *other = (FADynamicTableDataManager_RowData *) check_class_cast(o, [FADynamicTableDataManager_RowData class]);
  if (![((FADynamicTableDataManager_RowData *) nil_chk(other)) canEqualWithId:(id) check_class_cast(self, [NSObject class])]) return NO;
  if (![JavaUtilArrays deepEqualsWithNSObjectArray:[self getLines] withNSObjectArray:[other getLines]]) return NO;
  if ([self getId] != [other getId]) return NO;
  return YES;
}

- (BOOL)canEqualWithId:(id)other {
  return [other isKindOfClass:[FADynamicTableDataManager_RowData class]];
}

- (NSUInteger)hash {
  int PRIME = 59;
  int result = 1;
  result = result * PRIME + [JavaUtilArrays deepHashCodeWithNSObjectArray:[self getLines]];
  long long int $id = [self getId];
  result = result * PRIME + (int) ((long long) (((unsigned long long) $id) >> 32) ^ $id);
  return result;
}

- (NSString *)description {
  return [NSString stringWithFormat:@"DynamicTableDataManager.RowData(lines=%@, id=%lld)", [JavaUtilArrays deepToStringWithNSObjectArray:[self getLines]], [self getId]];
}

- (void)copyAllFieldsTo:(FADynamicTableDataManager_RowData *)other {
  [super copyAllFieldsTo:other];
  other->id__ = id__;
  other->lines_ = lines_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithLong:", "RowData", NULL, 0x1, NULL },
    { "getShowLineWithNSString:", "getShowLine", "Z", 0x1, NULL },
    { "getLineWithNSString:", "getLine", "Ljava.lang.String;", 0x1, NULL },
    { "getFluidTableRowObjectId", NULL, "Ljava.lang.Long;", 0x1, NULL },
    { "getLines", NULL, "[Ljava.lang.String;", 0x1, NULL },
    { "getId", NULL, "J", 0x1, NULL },
    { "setLinesWithNSStringArray:", "setLines", "V", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "canEqualWithId:", "canEqual", "Z", 0x4, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "lines_", NULL, 0x0, "[Ljava.lang.String;", NULL,  },
    { "id__", "id", 0x10, "J", NULL,  },
  };
  static J2ObjcClassInfo _FADynamicTableDataManager_RowData = { "RowData", "com.sponberg.app.manager", "DynamicTableDataManager", 0x9, 11, methods, 2, fields, 0, NULL};
  return &_FADynamicTableDataManager_RowData;
}

@end
