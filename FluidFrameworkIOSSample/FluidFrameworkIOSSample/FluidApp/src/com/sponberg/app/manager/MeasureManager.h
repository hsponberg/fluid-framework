//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-delomboked/com/sponberg/app/manager/MeasureManager.java
//

#ifndef _FAMeasureManager_H_
#define _FAMeasureManager_H_

@class JavaLangDouble;
@class JavaLangInteger;
@class JavaUtilArrayList;
@class JavaUtilConcurrentLocksReentrantReadWriteLock;
@class JavaUtilConcurrentLocksReentrantReadWriteLock_ReadLock;
@class JavaUtilConcurrentLocksReentrantReadWriteLock_WriteLock;
@protocol JavaUtilConcurrentScheduledExecutorService;

#import "JreEmulation.h"
#include "java/lang/Runnable.h"

@interface FAMeasureManager : NSObject {
 @public
  int numPointsToCollect_;
  int durationInSeconds_;
  int initialDelayMillis_;
  int measureProgress_;
  JavaLangDouble *mean_;
  JavaLangDouble *actual_;
  JavaUtilArrayList *list1_;
  double x_;
  double xStep_;
  double total_;
  id<JavaUtilConcurrentScheduledExecutorService> service_;
  JavaUtilConcurrentLocksReentrantReadWriteLock *lock_;
  JavaUtilConcurrentLocksReentrantReadWriteLock_WriteLock *writeLock_;
  JavaUtilConcurrentLocksReentrantReadWriteLock_ReadLock *readLock_;
}

- (void)startMeasurement;

- (double)getCurrentValue;

- (int)getNumPoints;

- (JavaLangDouble *)getMean;

- (JavaLangDouble *)getActual;

- (JavaLangInteger *)getMeasureProgress;

- (NSString *)getGraphData;

- (int)getNumPointsToCollect;

- (int)getDurationInSeconds;

- (int)getInitialDelayMillis;

- (JavaUtilArrayList *)getList1;

- (double)getX;

- (double)getXStep;

- (double)getTotal;

- (id<JavaUtilConcurrentScheduledExecutorService>)getService;

- (JavaUtilConcurrentLocksReentrantReadWriteLock *)getLock;

- (JavaUtilConcurrentLocksReentrantReadWriteLock_WriteLock *)getWriteLock;

- (JavaUtilConcurrentLocksReentrantReadWriteLock_ReadLock *)getReadLock;

- (void)setNumPointsToCollectWithInt:(int)numPointsToCollect;

- (void)setDurationInSecondsWithInt:(int)durationInSeconds;

- (void)setInitialDelayMillisWithInt:(int)initialDelayMillis;

- (void)setMeasureProgressWithInt:(int)measureProgress;

- (void)setMeanWithJavaLangDouble:(JavaLangDouble *)mean;

- (void)setActualWithJavaLangDouble:(JavaLangDouble *)actual;

- (void)setList1WithJavaUtilArrayList:(JavaUtilArrayList *)list1;

- (void)setXWithDouble:(double)x;

- (void)setTotalWithDouble:(double)total;

- (void)setServiceWithJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)service;

- (void)setLockWithJavaUtilConcurrentLocksReentrantReadWriteLock:(JavaUtilConcurrentLocksReentrantReadWriteLock *)lock;

- (void)setWriteLockWithJavaUtilConcurrentLocksReentrantReadWriteLock_WriteLock:(JavaUtilConcurrentLocksReentrantReadWriteLock_WriteLock *)writeLock;

- (void)setReadLockWithJavaUtilConcurrentLocksReentrantReadWriteLock_ReadLock:(JavaUtilConcurrentLocksReentrantReadWriteLock_ReadLock *)readLock;

- (id)init;

- (void)copyAllFieldsTo:(FAMeasureManager *)other;

@end

__attribute__((always_inline)) inline void FAMeasureManager_init() {}

J2OBJC_FIELD_SETTER(FAMeasureManager, mean_, JavaLangDouble *)
J2OBJC_FIELD_SETTER(FAMeasureManager, actual_, JavaLangDouble *)
J2OBJC_FIELD_SETTER(FAMeasureManager, list1_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(FAMeasureManager, service_, id<JavaUtilConcurrentScheduledExecutorService>)
J2OBJC_FIELD_SETTER(FAMeasureManager, lock_, JavaUtilConcurrentLocksReentrantReadWriteLock *)
J2OBJC_FIELD_SETTER(FAMeasureManager, writeLock_, JavaUtilConcurrentLocksReentrantReadWriteLock_WriteLock *)
J2OBJC_FIELD_SETTER(FAMeasureManager, readLock_, JavaUtilConcurrentLocksReentrantReadWriteLock_ReadLock *)

typedef FAMeasureManager ComSponbergAppManagerMeasureManager;

@interface FAMeasureManager_Point : NSObject {
 @public
  double x_;
  double y_;
}

- (id)initWithDouble:(double)x
          withDouble:(double)y;

- (JavaLangDouble *)getX;

- (JavaLangDouble *)getY;

- (void)copyAllFieldsTo:(FAMeasureManager_Point *)other;

@end

__attribute__((always_inline)) inline void FAMeasureManager_Point_init() {}

@interface FAMeasureManager_$1 : NSObject < JavaLangRunnable > {
 @public
  FAMeasureManager *this$0_;
}

- (void)run;

- (id)initWithFAMeasureManager:(FAMeasureManager *)outer$;

@end

__attribute__((always_inline)) inline void FAMeasureManager_$1_init() {}

J2OBJC_FIELD_SETTER(FAMeasureManager_$1, this$0_, FAMeasureManager *)

@interface FAMeasureManager_$1_$1 : NSObject < JavaLangRunnable > {
}

- (void)run;

- (id)init;

@end

__attribute__((always_inline)) inline void FAMeasureManager_$1_$1_init() {}

#endif // _FAMeasureManager_H_
