//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-delomboked/com/sponberg/app/ui/SeparateActivity.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "com/sponberg/app/datastore/DS.h"
#include "com/sponberg/app/datastore/postcodes/DSPostcode.h"
#include "com/sponberg/app/datastore/postcodes/DSSuburb.h"
#include "com/sponberg/app/ui/Screen.h"
#include "com/sponberg/app/ui/SeparateActivity.h"
#include "com/sponberg/fluid/FluidApp.h"
#include "com/sponberg/fluid/GlobalState.h"
#include "com/sponberg/fluid/datastore/DatastoreTransaction.h"
#include "com/sponberg/fluid/datastore/SQLResultList.h"
#include "com/sponberg/fluid/layout/ActionListener.h"
#include "com/sponberg/fluid/layout/DataModelManager.h"
#include "com/sponberg/fluid/layout/UIService.h"
#include "com/sponberg/fluid/util/Logger.h"
#include "java/lang/System.h"

@implementation FASeparateActivity

- (void)load__WithFFTFluidApp:(FFTFluidApp *)app {
  (void) [((FFTFluidApp_AddActionListenerBuilder *) nil_chk([((FFTFluidApp *) nil_chk(app)) addActionListenerWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ FAScreen_get_SeparateActivity_(), FAScreen_ScreenSeparateActivity_get_Close_() } count:2 type:[IOSClass classWithClass:[NSString class]]]])) listenerWithFFTActionListener:[[FASeparateActivity_$1 alloc] init]];
  (void) [((FFTFluidApp_AddActionListenerBuilder *) nil_chk([app addActionListenerWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ FAScreen_get_SeparateActivity_(), FAScreen_ScreenSeparateActivity_get_InputName_() } count:2 type:[IOSClass classWithClass:[NSString class]]]])) listenerWithFFTActionListener:[[FASeparateActivity_$2 alloc] initWithFASeparateActivity:self]];
  (void) [((FFTFluidApp_AddActionListenerBuilder *) nil_chk([app addActionListenerWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ FAScreen_get_SeparateActivity_(), FAScreen_ScreenSeparateActivity_get_Submit_() } count:2 type:[IOSClass classWithClass:[NSString class]]]])) listenerWithFFTActionListener:[[FASeparateActivity_$3 alloc] initWithFASeparateActivity:self withFFTFluidApp:app]];
}

- (IOSObjectArray *)getSupportedPlatforms {
  return nil;
}

- (id)init {
  if (self = [super init]) {
    inputName_ = @"";
  }
  return self;
}

- (void)copyAllFieldsTo:(FASeparateActivity *)other {
  [super copyAllFieldsTo:other];
  other->inputName_ = inputName_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "load__WithFFTFluidApp:", "load", "V", 0x1, NULL },
    { "getSupportedPlatforms", NULL, "[Ljava.lang.String;", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "inputName_", NULL, 0x0, "Ljava.lang.String;", NULL,  },
  };
  static J2ObjcClassInfo _FASeparateActivity = { "SeparateActivity", "com.sponberg.app.ui", NULL, 0x1, 3, methods, 1, fields, 0, NULL};
  return &_FASeparateActivity;
}

@end

@implementation FASeparateActivity_$1

- (void)userTappedWithFFTActionListener_EventInfo:(FFTActionListener_EventInfo *)info {
  [((id<FFTUIService>) nil_chk([((FFTFluidApp *) nil_chk(FFTGlobalState_get_fluidApp__())) getUiService])) closeCurrentLayout];
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "userTappedWithFFTActionListener_EventInfo:", "userTapped", "V", 0x1, NULL },
    { "init", NULL, NULL, 0x0, NULL },
  };
  static J2ObjcClassInfo _FASeparateActivity_$1 = { "$1", "com.sponberg.app.ui", "SeparateActivity", 0x8000, 2, methods, 0, NULL, 0, NULL};
  return &_FASeparateActivity_$1;
}

@end

@implementation FASeparateActivity_$2

- (void)userChangedValueToWithFFTActionListener_EventInfo:(FFTActionListener_EventInfo *)info
                                                   withId:(id)value {
  [FFTLogger debugWithId:self withNSString:@"Value changed to {}" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ value } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
  this$0_->inputName_ = [nil_chk(value) description];
  if ([value isEqual:@""]) {
    return;
  }
  FFTDatastoreTransaction *txn = [[FFTDatastoreTransaction alloc] initWithNSString:FADS_get_postcodes_()];
  [txn start];
  long long int millis = [JavaLangSystem currentTimeMillis];
  FFTSQLResultList *results = [((FFTDatastoreTransaction_QueryBuilder *) nil_chk([((FFTDatastoreTransaction_QueryBuilder *) nil_chk([((FFTDatastoreTransaction_QueryBuilder *) nil_chk([((FFTDatastoreTransaction_QueryBuilder *) nil_chk([txn queryWithIOSClass:[IOSClass classWithClass:[ComSponbergAppDatastorePostcodesDSPostcode class]]])) selectWithNSStringArray:[IOSObjectArray arrayWithObjects:(id[]){ ComSponbergAppDatastorePostcodesDSPostcode_get_id__(), ComSponbergAppDatastorePostcodesDSPostcode_get_title_() } count:2 type:[IOSClass classWithClass:[NSString class]]]])) whereWithNSString:@"{} like ?"])) paramWithNSString:ComSponbergAppDatastorePostcodesDSSuburb_get_title_() withId:[NSString stringWithFormat:@"%%%@%%", value]])) execute];
  long long int dur = [JavaLangSystem currentTimeMillis] - millis;
  [FFTLogger debugWithId:self withNSString:[NSString stringWithFormat:@"Searching for postcodes, duration is %lld found %d", dur, [((FFTSQLResultList *) nil_chk(results)) size]] withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]];
  if ([results size] < 20) {
    for (ComSponbergAppDatastorePostcodesDSPostcode * __strong postcode in results) {
      [FFTLogger debugWithId:self withNSString:[((ComSponbergAppDatastorePostcodesDSPostcode *) nil_chk(postcode)) getTitle] withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSObject class]]]];
    }
  }
  [txn rollback];
}

- (id)initWithFASeparateActivity:(FASeparateActivity *)outer$ {
  this$0_ = outer$;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "userChangedValueToWithFFTActionListener_EventInfo:withId:", "userChangedValueTo", "V", 0x1, NULL },
    { "initWithFASeparateActivity:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.sponberg.app.ui.SeparateActivity;", NULL,  },
  };
  static J2ObjcClassInfo _FASeparateActivity_$2 = { "$2", "com.sponberg.app.ui", "SeparateActivity", 0x8000, 2, methods, 1, fields, 0, NULL};
  return &_FASeparateActivity_$2;
}

@end

@implementation FASeparateActivity_$3

- (void)userTappedWithFFTActionListener_EventInfo:(FFTActionListener_EventInfo *)info {
  [((FFTDataModelManager *) nil_chk([((FFTFluidApp *) nil_chk(val$app_)) getDataModelManager])) setDataModelWithNSString:@"formName" withId:this$0_->inputName_];
  [((FFTDataModelManager *) nil_chk([val$app_ getDataModelManager])) dataDidChangeWithNSString:@"formName" withNSStringArray:[IOSObjectArray arrayWithLength:0 type:[IOSClass classWithClass:[NSString class]]]];
  [FFTLogger debugWithId:self withNSString:@"input value {}" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ this$0_->inputName_ } count:1 type:[IOSClass classWithClass:[NSObject class]]]];
}

- (id)initWithFASeparateActivity:(FASeparateActivity *)outer$
                 withFFTFluidApp:(FFTFluidApp *)capture$0 {
  this$0_ = outer$;
  val$app_ = capture$0;
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "userTappedWithFFTActionListener_EventInfo:", "userTapped", "V", 0x1, NULL },
    { "initWithFASeparateActivity:withFFTFluidApp:", "init", NULL, 0x0, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.sponberg.app.ui.SeparateActivity;", NULL,  },
    { "val$app_", NULL, 0x1012, "Lcom.sponberg.fluid.FluidApp;", NULL,  },
  };
  static J2ObjcClassInfo _FASeparateActivity_$3 = { "$3", "com.sponberg.app.ui", "SeparateActivity", 0x8000, 2, methods, 2, fields, 0, NULL};
  return &_FASeparateActivity_$3;
}

@end
