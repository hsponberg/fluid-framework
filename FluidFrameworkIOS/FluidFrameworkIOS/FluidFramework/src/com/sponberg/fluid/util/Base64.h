//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-delomboked/com/sponberg/fluid/util/Base64.java
//

#ifndef _FFTBase64_H_
#define _FFTBase64_H_

@class IOSByteArray;
@class IOSClass;
@class JavaIoByteArrayInputStream;
@class JavaIoInputStream;
@class JavaIoObjectStreamClass;
@class JavaIoOutputStream;
@class JavaLangClassLoader;
@class JavaNioByteBuffer;
@class JavaNioCharBuffer;
@protocol JavaIoSerializable;

#import "JreEmulation.h"
#include "java/io/FilterInputStream.h"
#include "java/io/FilterOutputStream.h"
#include "java/io/ObjectInputStream.h"

#define FFTBase64_DECODE 0
#define FFTBase64_DONT_GUNZIP 4
#define FFTBase64_DO_BREAK_LINES 8
#define FFTBase64_ENCODE 1
#define FFTBase64_EQUALS_SIGN 61
#define FFTBase64_EQUALS_SIGN_ENC -1
#define FFTBase64_GZIP 2
#define FFTBase64_MAX_LINE_LENGTH 76
#define FFTBase64_NEW_LINE 10
#define FFTBase64_NO_OPTIONS 0
#define FFTBase64_ORDERED 32
#define FFTBase64_URL_SAFE 16
#define FFTBase64_WHITE_SPACE_ENC -5

@interface FFTBase64 : NSObject {
}

+ (IOSByteArray *)getAlphabetWithInt:(int)options;

+ (IOSByteArray *)getDecodabetWithInt:(int)options;

- (id)init;

+ (IOSByteArray *)encode3to4WithByteArray:(IOSByteArray *)b4
                            withByteArray:(IOSByteArray *)threeBytes
                                  withInt:(int)numSigBytes
                                  withInt:(int)options;

+ (IOSByteArray *)encode3to4WithByteArray:(IOSByteArray *)source
                                  withInt:(int)srcOffset
                                  withInt:(int)numSigBytes
                            withByteArray:(IOSByteArray *)destination
                                  withInt:(int)destOffset
                                  withInt:(int)options;

+ (void)encodeWithJavaNioByteBuffer:(JavaNioByteBuffer *)raw
              withJavaNioByteBuffer:(JavaNioByteBuffer *)encoded;

+ (void)encodeWithJavaNioByteBuffer:(JavaNioByteBuffer *)raw
              withJavaNioCharBuffer:(JavaNioCharBuffer *)encoded;

+ (NSString *)encodeObjectWithJavaIoSerializable:(id<JavaIoSerializable>)serializableObject;

+ (NSString *)encodeObjectWithJavaIoSerializable:(id<JavaIoSerializable>)serializableObject
                                         withInt:(int)options;

+ (NSString *)encodeBytesWithByteArray:(IOSByteArray *)source;

+ (NSString *)encodeBytesWithByteArray:(IOSByteArray *)source
                               withInt:(int)options;

+ (NSString *)encodeBytesWithByteArray:(IOSByteArray *)source
                               withInt:(int)off
                               withInt:(int)len;

+ (NSString *)encodeBytesWithByteArray:(IOSByteArray *)source
                               withInt:(int)off
                               withInt:(int)len
                               withInt:(int)options;

+ (IOSByteArray *)encodeBytesToBytesWithByteArray:(IOSByteArray *)source;

+ (IOSByteArray *)encodeBytesToBytesWithByteArray:(IOSByteArray *)source
                                          withInt:(int)off
                                          withInt:(int)len
                                          withInt:(int)options;

+ (int)decode4to3WithByteArray:(IOSByteArray *)source
                       withInt:(int)srcOffset
                 withByteArray:(IOSByteArray *)destination
                       withInt:(int)destOffset
                       withInt:(int)options;

+ (IOSByteArray *)decodeWithByteArray:(IOSByteArray *)source;

+ (IOSByteArray *)decodeWithByteArray:(IOSByteArray *)source
                              withInt:(int)off
                              withInt:(int)len
                              withInt:(int)options;

+ (IOSByteArray *)decodeWithNSString:(NSString *)s;

+ (IOSByteArray *)decodeWithNSString:(NSString *)s
                             withInt:(int)options;

+ (id)decodeToObjectWithNSString:(NSString *)encodedObject;

+ (id)decodeToObjectWithNSString:(NSString *)encodedObject
                         withInt:(int)options
         withJavaLangClassLoader:(JavaLangClassLoader *)loader;

+ (void)encodeToFileWithByteArray:(IOSByteArray *)dataToEncode
                     withNSString:(NSString *)filename;

+ (void)decodeToFileWithNSString:(NSString *)dataToDecode
                    withNSString:(NSString *)filename;

+ (IOSByteArray *)decodeFromFileWithNSString:(NSString *)filename;

+ (NSString *)encodeFromFileWithNSString:(NSString *)filename;

+ (void)encodeFileToFileWithNSString:(NSString *)infile
                        withNSString:(NSString *)outfile;

+ (void)decodeFileToFileWithNSString:(NSString *)infile
                        withNSString:(NSString *)outfile;

@end

FOUNDATION_EXPORT BOOL FFTBase64_initialized;
J2OBJC_STATIC_INIT(FFTBase64)

J2OBJC_STATIC_FIELD_GETTER(FFTBase64, NO_OPTIONS, int)

J2OBJC_STATIC_FIELD_GETTER(FFTBase64, ENCODE, int)

J2OBJC_STATIC_FIELD_GETTER(FFTBase64, DECODE, int)

J2OBJC_STATIC_FIELD_GETTER(FFTBase64, GZIP, int)

J2OBJC_STATIC_FIELD_GETTER(FFTBase64, DONT_GUNZIP, int)

J2OBJC_STATIC_FIELD_GETTER(FFTBase64, DO_BREAK_LINES, int)

J2OBJC_STATIC_FIELD_GETTER(FFTBase64, URL_SAFE, int)

J2OBJC_STATIC_FIELD_GETTER(FFTBase64, ORDERED, int)

J2OBJC_STATIC_FIELD_GETTER(FFTBase64, MAX_LINE_LENGTH, int)

J2OBJC_STATIC_FIELD_GETTER(FFTBase64, EQUALS_SIGN, char)

J2OBJC_STATIC_FIELD_GETTER(FFTBase64, NEW_LINE, char)

FOUNDATION_EXPORT NSString *FFTBase64_PREFERRED_ENCODING_;
J2OBJC_STATIC_FIELD_GETTER(FFTBase64, PREFERRED_ENCODING_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(FFTBase64, WHITE_SPACE_ENC, char)

J2OBJC_STATIC_FIELD_GETTER(FFTBase64, EQUALS_SIGN_ENC, char)

FOUNDATION_EXPORT IOSByteArray *FFTBase64__STANDARD_ALPHABET_;
J2OBJC_STATIC_FIELD_GETTER(FFTBase64, _STANDARD_ALPHABET_, IOSByteArray *)

FOUNDATION_EXPORT IOSByteArray *FFTBase64__STANDARD_DECODABET_;
J2OBJC_STATIC_FIELD_GETTER(FFTBase64, _STANDARD_DECODABET_, IOSByteArray *)

FOUNDATION_EXPORT IOSByteArray *FFTBase64__URL_SAFE_ALPHABET_;
J2OBJC_STATIC_FIELD_GETTER(FFTBase64, _URL_SAFE_ALPHABET_, IOSByteArray *)

FOUNDATION_EXPORT IOSByteArray *FFTBase64__URL_SAFE_DECODABET_;
J2OBJC_STATIC_FIELD_GETTER(FFTBase64, _URL_SAFE_DECODABET_, IOSByteArray *)

FOUNDATION_EXPORT IOSByteArray *FFTBase64__ORDERED_ALPHABET_;
J2OBJC_STATIC_FIELD_GETTER(FFTBase64, _ORDERED_ALPHABET_, IOSByteArray *)

FOUNDATION_EXPORT IOSByteArray *FFTBase64__ORDERED_DECODABET_;
J2OBJC_STATIC_FIELD_GETTER(FFTBase64, _ORDERED_DECODABET_, IOSByteArray *)

typedef FFTBase64 ComSponbergFluidUtilBase64;

@interface FFTBase64_InputStream : JavaIoFilterInputStream {
 @public
  BOOL encode_;
  int position_;
  IOSByteArray *buffer_;
  int bufferLength_;
  int numSigBytes_;
  int lineLength_;
  BOOL breakLines_;
  int options_;
  IOSByteArray *decodabet_;
}

- (id)initWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (id)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                        withInt:(int)options;

- (int)read;

- (int)readWithByteArray:(IOSByteArray *)dest
                 withInt:(int)off
                 withInt:(int)len;

- (void)copyAllFieldsTo:(FFTBase64_InputStream *)other;

@end

__attribute__((always_inline)) inline void FFTBase64_InputStream_init() {}

J2OBJC_FIELD_SETTER(FFTBase64_InputStream, buffer_, IOSByteArray *)
J2OBJC_FIELD_SETTER(FFTBase64_InputStream, decodabet_, IOSByteArray *)

@interface FFTBase64_OutputStream : JavaIoFilterOutputStream {
 @public
  BOOL encode_;
  int position_;
  IOSByteArray *buffer_;
  int bufferLength_;
  int lineLength_;
  BOOL breakLines_;
  IOSByteArray *b4_;
  BOOL suspendEncoding__;
  int options_;
  IOSByteArray *decodabet_;
}

- (id)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg;

- (id)initWithJavaIoOutputStream:(JavaIoOutputStream *)outArg
                         withInt:(int)options;

- (void)writeWithInt:(int)theByte;

- (void)writeWithByteArray:(IOSByteArray *)theBytes
                   withInt:(int)off
                   withInt:(int)len;

- (void)flushBase64;

- (void)close;

- (void)suspendEncoding;

- (void)resumeEncoding;

- (void)copyAllFieldsTo:(FFTBase64_OutputStream *)other;

@end

__attribute__((always_inline)) inline void FFTBase64_OutputStream_init() {}

J2OBJC_FIELD_SETTER(FFTBase64_OutputStream, buffer_, IOSByteArray *)
J2OBJC_FIELD_SETTER(FFTBase64_OutputStream, b4_, IOSByteArray *)
J2OBJC_FIELD_SETTER(FFTBase64_OutputStream, decodabet_, IOSByteArray *)

@interface FFTBase64_$1 : JavaIoObjectInputStream {
 @public
  JavaLangClassLoader *val$loader_;
}

- (IOSClass *)resolveClassWithJavaIoObjectStreamClass:(JavaIoObjectStreamClass *)streamClass;

- (id)initWithJavaIoByteArrayInputStream:(JavaIoByteArrayInputStream *)arg$0
                 withJavaLangClassLoader:(JavaLangClassLoader *)capture$0;

@end

__attribute__((always_inline)) inline void FFTBase64_$1_init() {}

J2OBJC_FIELD_SETTER(FFTBase64_$1, val$loader_, JavaLangClassLoader *)

#endif // _FFTBase64_H_
