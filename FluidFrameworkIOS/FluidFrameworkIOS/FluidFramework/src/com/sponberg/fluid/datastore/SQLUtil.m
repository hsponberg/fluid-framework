//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-delomboked/com/sponberg/fluid/datastore/SQLUtil.java
//

#include "IOSClass.h"
#include "com/sponberg/fluid/datastore/SQLQueryJoinBase.h"
#include "com/sponberg/fluid/datastore/SQLTable.h"
#include "com/sponberg/fluid/datastore/SQLUtil.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/util/HashMap.h"

BOOL FFTSQLUtil_initialized = NO;

@implementation FFTSQLUtil

JavaUtilHashMap * FFTSQLUtil_tableName_;

+ (NSString *)getTableNameWithIOSClass:(IOSClass *)queryResultClass {
  if (queryResultClass == nil) {
    return FFTSQLQueryJoinBase_get_kNoTableName_();
  }
  @try {
    NSString *name = [((JavaUtilHashMap *) nil_chk(FFTSQLUtil_tableName_)) getWithId:queryResultClass];
    if (name == nil) {
      name = [((id<FFTSQLTable>) nil_chk([((IOSClass *) nil_chk(queryResultClass)) newInstance])) _getTableName];
      (void) [FFTSQLUtil_tableName_ putWithId:queryResultClass withId:name];
    }
    return name;
  }
  @catch (JavaLangException *e) {
    @throw [[JavaLangRuntimeException alloc] initWithJavaLangThrowable:e];
  }
}

- (id)init {
  return [super init];
}

+ (void)initialize {
  if (self == [FFTSQLUtil class]) {
    FFTSQLUtil_tableName_ = [[JavaUtilHashMap alloc] init];
    FFTSQLUtil_initialized = YES;
  }
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "getTableNameWithIOSClass:", "getTableName", "Ljava.lang.String;", 0x9, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "tableName_", NULL, 0x8, "Ljava.util.HashMap;", &FFTSQLUtil_tableName_,  },
  };
  static J2ObjcClassInfo _FFTSQLUtil = { "SQLUtil", "com.sponberg.fluid.datastore", NULL, 0x1, 2, methods, 1, fields, 0, NULL};
  return &_FFTSQLUtil;
}

@end
