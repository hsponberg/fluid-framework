//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-delomboked/com/sponberg/fluid/datastore/SQLQueryResultDefault.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "com/sponberg/fluid/datastore/SQLQueryResultDefault.h"
#include "java/lang/Double.h"
#include "java/lang/Integer.h"
#include "java/util/HashMap.h"

@implementation FFTSQLQueryResultDefault

- (void)_setStringWithNSString:(NSString *)columnName
                  withNSString:(NSString *)value {
  (void) [((JavaUtilHashMap *) nil_chk(data_)) putWithId:columnName withId:value];
}

- (NSString *)getStringWithNSString:(NSString *)columnName {
  return (NSString *) check_class_cast([((JavaUtilHashMap *) nil_chk(data_)) getWithId:columnName], [NSString class]);
}

- (void)_setIntegerWithNSString:(NSString *)columnName
            withJavaLangInteger:(JavaLangInteger *)value {
  (void) [((JavaUtilHashMap *) nil_chk(data_)) putWithId:columnName withId:value];
}

- (JavaLangInteger *)getIntegerWithNSString:(NSString *)columnName {
  return (JavaLangInteger *) check_class_cast([((JavaUtilHashMap *) nil_chk(data_)) getWithId:columnName], [JavaLangInteger class]);
}

- (void)_setDoubleWithNSString:(NSString *)columnName
            withJavaLangDouble:(JavaLangDouble *)value {
  (void) [((JavaUtilHashMap *) nil_chk(data_)) putWithId:columnName withId:value];
}

- (JavaLangDouble *)getDoubleWithNSString:(NSString *)columnName {
  return (JavaLangDouble *) check_class_cast([((JavaUtilHashMap *) nil_chk(data_)) getWithId:columnName], [JavaLangDouble class]);
}

- (void)_setNullWithNSString:(NSString *)columnName {
  (void) [((JavaUtilHashMap *) nil_chk(data_)) putWithId:columnName withId:nil];
}

- (void)_setBlobWithNSString:(NSString *)columnName
               withByteArray:(IOSByteArray *)value {
  (void) [((JavaUtilHashMap *) nil_chk(data_)) putWithId:columnName withId:value];
}

- (IOSByteArray *)getBlobWithNSString:(NSString *)columnName {
  return (IOSByteArray *) check_class_cast([((JavaUtilHashMap *) nil_chk(data_)) getWithId:columnName], [IOSByteArray class]);
}

- (JavaUtilHashMap *)getData {
  return data_;
}

- (NSString *)description {
  return [NSString stringWithFormat:@"SQLQueryResultDefault(data=%@)", [self getData]];
}

- (id)init {
  if (self = [super init]) {
    data_ = [[JavaUtilHashMap alloc] init];
  }
  return self;
}

- (void)copyAllFieldsTo:(FFTSQLQueryResultDefault *)other {
  [super copyAllFieldsTo:other];
  other->data_ = data_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "_setStringWithNSString:withNSString:", "_setString", "V", 0x1, NULL },
    { "getStringWithNSString:", "getString", "Ljava.lang.String;", 0x1, NULL },
    { "_setIntegerWithNSString:withJavaLangInteger:", "_setInteger", "V", 0x1, NULL },
    { "getIntegerWithNSString:", "getInteger", "Ljava.lang.Integer;", 0x1, NULL },
    { "_setDoubleWithNSString:withJavaLangDouble:", "_setDouble", "V", 0x1, NULL },
    { "getDoubleWithNSString:", "getDouble", "Ljava.lang.Double;", 0x1, NULL },
    { "_setNullWithNSString:", "_setNull", "V", 0x1, NULL },
    { "_setBlobWithNSString:withByteArray:", "_setBlob", "V", 0x1, NULL },
    { "getBlobWithNSString:", "getBlob", "[B", 0x1, NULL },
    { "getData", NULL, "Ljava.util.HashMap;", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "data_", NULL, 0x0, "Ljava.util.HashMap;", NULL,  },
  };
  static J2ObjcClassInfo _FFTSQLQueryResultDefault = { "SQLQueryResultDefault", "com.sponberg.fluid.datastore", NULL, 0x1, 12, methods, 1, fields, 0, NULL};
  return &_FFTSQLQueryResultDefault;
}

@end
