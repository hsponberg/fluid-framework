//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-delomboked/com/sponberg/fluid/layout/Length.java
//

#include "IOSObjectArray.h"
#include "com/sponberg/fluid/layout/Length.h"
#include "com/sponberg/fluid/layout/Subtractor.h"
#include "java/lang/Double.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"

@implementation FFTLength

- (void)addSubtractorWithFFTSubtractor:(FFTSubtractor *)length {
  [((JavaUtilArrayList *) nil_chk(subtractors_)) addWithId:length];
}

- (BOOL)fill {
  return NO;
}

- (BOOL)compute {
  return NO;
}

- (BOOL)isFromDataModel {
  return NO;
}

- (BOOL)fillRatio {
  return NO;
}

- (BOOL)equal {
  return NO;
}

- (BOOL)relativeToView {
  return NO;
}

- (BOOL)relativeToParent {
  return NO;
}

- (BOOL)relativeToRow {
  return NO;
}

- (BOOL)relativeToLayer {
  return NO;
}

- (BOOL)summation {
  return NO;
}

- (BOOL)isDynamic {
  return [self fill] || [self fillRatio] || [self equal] || [self relativeToView] || [self relativeToParent] || [self summation] || [self compute] || [self relativeToRow] || [self relativeToLayer] || [self isFromDataModel];
}

- (JavaLangDouble *)getFixedLength {
  @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Not implemented"];
}

- (NSString *)getRelativeId {
  @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Not implemented"];
}

- (double)getRatio {
  @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Not implemented"];
}

- (int)getLayerIndex {
  @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Not implemented"];
}

- (NSString *)getDataModelKey {
  return nil;
}

- (IOSObjectArray *)getSummationOf {
  @throw [[JavaLangRuntimeException alloc] initWithNSString:@"Not implemented"];
}

- (JavaUtilArrayList *)getSubtractors {
  return self->subtractors_;
}

- (void)setSubtractorsWithJavaUtilArrayList:(JavaUtilArrayList *)subtractors {
  self->subtractors_ = subtractors;
}

- (id)init {
  if (self = [super init]) {
    subtractors_ = [[JavaUtilArrayList alloc] init];
  }
  return self;
}

- (void)copyAllFieldsTo:(FFTLength *)other {
  [super copyAllFieldsTo:other];
  other->subtractors_ = subtractors_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "addSubtractorWithFFTSubtractor:", "addSubtractor", "V", 0x1, NULL },
    { "fill", NULL, "Z", 0x1, NULL },
    { "compute", NULL, "Z", 0x1, NULL },
    { "isFromDataModel", NULL, "Z", 0x1, NULL },
    { "fillRatio", NULL, "Z", 0x1, NULL },
    { "equal", NULL, "Z", 0x1, NULL },
    { "relativeToView", NULL, "Z", 0x1, NULL },
    { "relativeToParent", NULL, "Z", 0x1, NULL },
    { "relativeToRow", NULL, "Z", 0x1, NULL },
    { "relativeToLayer", NULL, "Z", 0x1, NULL },
    { "summation", NULL, "Z", 0x1, NULL },
    { "isDynamic", NULL, "Z", 0x1, NULL },
    { "getFixedLength", NULL, "Ljava.lang.Double;", 0x1, NULL },
    { "getRelativeId", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getRatio", NULL, "D", 0x1, NULL },
    { "getLayerIndex", NULL, "I", 0x1, NULL },
    { "getDataModelKey", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getSummationOf", NULL, "[Ljava.lang.String;", 0x1, NULL },
    { "getSubtractors", NULL, "Ljava.util.ArrayList;", 0x1, NULL },
    { "setSubtractorsWithJavaUtilArrayList:", "setSubtractors", "V", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "subtractors_", NULL, 0x0, "Ljava.util.ArrayList;", NULL,  },
  };
  static J2ObjcClassInfo _FFTLength = { "Length", "com.sponberg.fluid.layout", NULL, 0x401, 21, methods, 1, fields, 0, NULL};
  return &_FFTLength;
}

@end
