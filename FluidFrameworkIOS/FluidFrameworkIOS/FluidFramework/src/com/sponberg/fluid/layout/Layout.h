//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-delomboked/com/sponberg/fluid/layout/Layout.java
//

#ifndef _FFTLayout_H_
#define _FFTLayout_H_

@class FFTColor;
@class FFTLRUCache;
@class FFTLayout_AlignEnum;
@class FFTLayout_DirectionEnum;
@class FFTLayout_LastLayout;
@class FFTLayout_Orientation;
@class FFTLayout_Orientation_Layer;
@class FFTView;
@class IOSObjectArray;
@class JavaLangDouble;
@class JavaUtilArrayList;
@class JavaUtilHashMap;
@class JavaUtilHashSet;
@class JavaUtilLinkedHashSet;
@protocol JavaUtilCollection;
@protocol JavaUtilList;

#import "JreEmulation.h"
#include "com/sponberg/fluid/layout/DataChangeListener.h"
#include "com/sponberg/fluid/layout/LayoutAction.h"
#include "com/sponberg/fluid/util/LRUCache.h"
#include "java/lang/Enum.h"
#include "java/util/Comparator.h"

@interface FFTLayout : NSObject < FFTLRUCache_RemovedListener > {
 @public
  NSString *name_;
  NSString *nameKey_;
  NSString *subtitle_;
  NSString *subtitleKey_;
  NSString *id__;
  FFTColor *backgroundColor_;
  BOOL precomputedPositions_;
  BOOL wrapInScrollView_;
  BOOL blockFocusViewOnLoad_;
  FFTLayout_LastLayout *lastLayout_;
  FFTLRUCache *viewCache_;
  int spacerId_;
  FFTLayout_Orientation *portrait_;
  FFTLayout_Orientation *landscape_;
  FFTLayout_Orientation *currentOrientation_;
  JavaUtilLinkedHashSet *allViews_;
  JavaUtilArrayList *allViewsToBePresentedToUI_;
  JavaUtilHashMap *viewMap_;
  JavaUtilHashMap *propertiesByCategory_;
  FFTView *lastLeftEdge_;
  FFTView *lastRightEdge_;
  FFTView *last_;
  double baseUnit_;
  BOOL isInLandscape__;
  JavaUtilHashSet *conditionalKeys_;
  FFTLRUCache *cache_;
}

- (id)initWithNSString:(NSString *)id_
          withNSString:(NSString *)name
          withNSString:(NSString *)nameKey
            withDouble:(double)baseUnit;

- (id<JavaUtilCollection>)getAllViews;

- (id<JavaUtilCollection>)getAllViewsToBePresentedToUI;

- (void)setAnchorWithFFTView:(FFTView *)anchor
 withFFTLayout_DirectionEnum:(FFTLayout_DirectionEnum *)direction;

- (void)setPropertiesWithJavaUtilList:(id<JavaUtilList>)properties;

- (NSString *)getPropertyWithNSString:(NSString *)category
                         withNSString:(NSString *)property;

- (void)addViewWithFFTView:(FFTView *)view;

- (void)setupDynamicCoordsWithFFTView:(FFTView *)view;

- (void)registerDynamicCoordRelativeHeightWithFFTView:(FFTView *)view
                                  withFFTLayoutAction:(id<FFTLayoutAction>)action;

- (void)registerDynamicCoordRelativeHeight2WithFFTView:(FFTView *)view
                                   withFFTLayoutAction:(id<FFTLayoutAction>)action;

- (void)addNewLayerWithNSString:(NSString *)visibleCondition;

- (void)addNewLayerWithNSString:(NSString *)visibleCondition
                        withInt:(int)zIndex;

- (void)addRightWithFFTView:(FFTView *)view
    withFFTLayout_AlignEnum:(FFTLayout_AlignEnum *)vAlign;

- (void)addLeftWithFFTView:(FFTView *)view
   withFFTLayout_AlignEnum:(FFTLayout_AlignEnum *)vAlign;

- (void)addDownWithFFTView:(FFTView *)view
   withFFTLayout_AlignEnum:(FFTLayout_AlignEnum *)align
withFFTLayout_DirectionEnum:(FFTLayout_DirectionEnum *)direction;

- (id<JavaUtilCollection>)getViewsWithBoolean:(BOOL)landscape
                                   withDouble:(double)width
                                   withDouble:(double)height
                                 withNSString:(NSString *)viewPath;

- (id<JavaUtilCollection>)getViewsWithBoolean:(BOOL)landscape
                                   withDouble:(double)width
                                   withDouble:(double)height
                                 withNSString:(NSString *)dataModelPrefix
                                 withNSString:(NSString *)viewPath;

- (void)invalidateCacheWithNSString:(NSString *)dataModelPrefix;

- (id<JavaUtilCollection>)getViewsWithBoolean:(BOOL)landscape
                                   withDouble:(double)width
                                   withDouble:(double)height
                                 withNSString:(NSString *)dataModelPrefix
                                 withNSString:(NSString *)viewPath
                                  withBoolean:(BOOL)printTable;

+ (id<JavaUtilCollection>)getViewPositionsWithNSString:(NSString *)viewPath
                                withJavaUtilCollection:(id<JavaUtilCollection>)views;

- (void)createOrientationLandscape;

- (void)setOrientationLandscapeWithBoolean:(BOOL)isLandscape;

- (void)sortAllViewsAccordingToLayerZIndex;

- (JavaUtilArrayList *)layoutWithBoolean:(BOOL)landscape
                              withDouble:(double)width
                              withDouble:(double)height
                            withNSString:(NSString *)dataModelPrefix
                             withBoolean:(BOOL)printTable
                             withBoolean:(BOOL)computingHeight
                             withBoolean:(BOOL)useComputingHeightCache
                            withNSString:(NSString *)viewPath;

- (void)setWidthsWithDouble:(double)width
               withNSString:(NSString *)dataModelPrefix;

- (void)setWidthsHelperWithDouble:(double)width
  withFFTLayout_Orientation_Layer:(FFTLayout_Orientation_Layer *)layer
                     withNSString:(NSString *)dataModelPrefix;

- (BOOL)computeWidthWithFFTView:(FFTView *)view
                     withDouble:(double)width
                   withNSString:(NSString *)dataModelPrefix;

- (void)computeWidthSecondPassWithFFTView:(FFTView *)view
                               withDouble:(double)width
          withFFTLayout_Orientation_Layer:(FFTLayout_Orientation_Layer *)layer;

- (double)getRemainingWidthCheckingEarlierChainWithJavaUtilArrayList:(JavaUtilArrayList *)viewsInChain
                                                             withInt:(int)horizontalChain
                                                          withDouble:(double)width
                                     withFFTLayout_Orientation_Layer:(FFTLayout_Orientation_Layer *)layer;

- (void)setHeightsWithDouble:(double)height
                 withBoolean:(BOOL)computingHeight
                withNSString:(NSString *)dataModelPrefix
                 withBoolean:(BOOL)useComputingHeightCache;

- (void)setHeightsHelperWithDouble:(double)height
   withFFTLayout_Orientation_Layer:(FFTLayout_Orientation_Layer *)layer
                       withBoolean:(BOOL)computingHeight
                      withNSString:(NSString *)dataModelPrefix
                       withBoolean:(BOOL)useComputingHeightCache;

- (BOOL)computeHeightWithFFTView:(FFTView *)view
                      withDouble:(double)height
                    withNSString:(NSString *)dataModelPrefix
                     withBoolean:(BOOL)useComputingHeightCache;

- (JavaLangDouble *)subtractorViewsWidthWithJavaUtilArrayList:(JavaUtilArrayList *)subtractors
                                                  withBoolean:(BOOL)setingUpDynamicCoords;

- (JavaLangDouble *)subtractorViewsHeightWithJavaUtilArrayList:(JavaUtilArrayList *)subtractors
                                                   withBoolean:(BOOL)setingUpDynamicCoords;

- (double)heightForLayerWithInt:(int)layerIndex;

- (BOOL)computeHeightSecondPassWithFFTView:(FFTView *)view
                                withDouble:(double)height
           withFFTLayout_Orientation_Layer:(FFTLayout_Orientation_Layer *)layer
                               withBoolean:(BOOL)computingHeight;

- (double)getRemainingHeightWithFFTView:(FFTView *)view
                             withDouble:(double)height
        withFFTLayout_Orientation_Layer:(FFTLayout_Orientation_Layer *)layer;

- (double)computeHeightForChainIntersectingViewWithJavaUtilArrayList:(JavaUtilArrayList *)chain
                                                         withFFTView:(FFTView *)view;

- (double)maxHeightForChainWithInt:(int)horizontalChain
   withFFTLayout_Orientation_Layer:(FFTLayout_Orientation_Layer *)layer;

- (void)printTable;

- (id<JavaUtilCollection>)getConditionalKeys;

- (void)resetWithDouble:(double)baseUnit
           withNSString:(NSString *)dataModelPrefix
             withDouble:(double)width;

- (BOOL)isViewVisibleWithFFTLayout_Orientation:(FFTLayout_Orientation *)o
                                   withFFTView:(FFTView *)view
                                  withNSString:(NSString *)dataModelPrefix;

- (BOOL)checkViewConditionWithNSString:(NSString *)visibleCondition
                          withNSString:(NSString *)dataModelPrefix;

- (void)clearViewWithFFTView:(FFTView *)view;

- (void)resetViewWithFFTView:(FFTView *)view
                  withDouble:(double)baseUnit
                 withBoolean:(BOOL)isVisible
                  withDouble:(double)width;

- (FFTLayout *)getLayoutWithNSString:(NSString *)viewId
                        withNSString:(NSString *)layoutId;

- (double)calculateHeightWithBoolean:(BOOL)landscape
                           withFloat:(float)width
                        withNSString:(NSString *)dataModelPrefix;

- (double)calculateHeightWithBoolean:(BOOL)landscape
                           withFloat:(float)width
                        withNSString:(NSString *)dataModelPrefix
                         withBoolean:(BOOL)useCache;

- (void)entryWasRemovedWithId:(NSString *)cacheId
                       withId:(FFTLayout_LastLayout *)entry_;

- (NSString *)description;

- (NSString *)getName;

- (NSString *)getNameKey;

- (NSString *)getSubtitle;

- (NSString *)getSubtitleKey;

- (NSString *)getId;

- (FFTColor *)getBackgroundColor;

- (BOOL)isPrecomputedPositions;

- (BOOL)isWrapInScrollView;

- (BOOL)isBlockFocusViewOnLoad;

- (FFTLayout_LastLayout *)getLastLayout;

- (FFTLRUCache *)getViewCache;

- (int)getSpacerId;

- (FFTLayout_Orientation *)getPortrait;

- (FFTLayout_Orientation *)getLandscape;

- (FFTLayout_Orientation *)getCurrentOrientation;

- (JavaUtilHashMap *)getViewMap;

- (JavaUtilHashMap *)getPropertiesByCategory;

- (FFTView *)getLastLeftEdge;

- (FFTView *)getLastRightEdge;

- (FFTView *)getLast;

- (double)getBaseUnit;

- (BOOL)isInLandscape;

- (FFTLRUCache *)getCache;

- (void)setSubtitleWithNSString:(NSString *)subtitle;

- (void)setSubtitleKeyWithNSString:(NSString *)subtitleKey;

- (void)setBackgroundColorWithFFTColor:(FFTColor *)backgroundColor;

- (void)setPrecomputedPositionsWithBoolean:(BOOL)precomputedPositions;

- (void)setWrapInScrollViewWithBoolean:(BOOL)wrapInScrollView;

- (void)setBlockFocusViewOnLoadWithBoolean:(BOOL)blockFocusViewOnLoad;

- (void)setLastLayoutWithFFTLayout_LastLayout:(FFTLayout_LastLayout *)lastLayout;

- (void)setViewCacheWithFFTLRUCache:(FFTLRUCache *)viewCache;

- (void)setSpacerIdWithInt:(int)spacerId;

- (void)setPortraitWithFFTLayout_Orientation:(FFTLayout_Orientation *)portrait;

- (void)setLandscapeWithFFTLayout_Orientation:(FFTLayout_Orientation *)landscape;

- (void)setCurrentOrientationWithFFTLayout_Orientation:(FFTLayout_Orientation *)currentOrientation;

- (void)setAllViewsWithJavaUtilLinkedHashSet:(JavaUtilLinkedHashSet *)allViews;

- (void)setAllViewsToBePresentedToUIWithJavaUtilArrayList:(JavaUtilArrayList *)allViewsToBePresentedToUI;

- (void)setViewMapWithJavaUtilHashMap:(JavaUtilHashMap *)viewMap;

- (void)setPropertiesByCategoryWithJavaUtilHashMap:(JavaUtilHashMap *)propertiesByCategory;

- (void)setLastLeftEdgeWithFFTView:(FFTView *)lastLeftEdge;

- (void)setLastRightEdgeWithFFTView:(FFTView *)lastRightEdge;

- (void)setLastWithFFTView:(FFTView *)last;

- (void)setBaseUnitWithDouble:(double)baseUnit;

- (void)setInLandscapeWithBoolean:(BOOL)isInLandscape;

- (void)setConditionalKeysWithJavaUtilHashSet:(JavaUtilHashSet *)conditionalKeys;

- (void)setCacheWithFFTLRUCache:(FFTLRUCache *)cache;

- (BOOL)isEqual:(id)o;

- (BOOL)canEqualWithId:(id)other;

- (NSUInteger)hash;

- (void)copyAllFieldsTo:(FFTLayout *)other;

@end

__attribute__((always_inline)) inline void FFTLayout_init() {}

J2OBJC_FIELD_SETTER(FFTLayout, name_, NSString *)
J2OBJC_FIELD_SETTER(FFTLayout, nameKey_, NSString *)
J2OBJC_FIELD_SETTER(FFTLayout, subtitle_, NSString *)
J2OBJC_FIELD_SETTER(FFTLayout, subtitleKey_, NSString *)
J2OBJC_FIELD_SETTER(FFTLayout, id__, NSString *)
J2OBJC_FIELD_SETTER(FFTLayout, backgroundColor_, FFTColor *)
J2OBJC_FIELD_SETTER(FFTLayout, lastLayout_, FFTLayout_LastLayout *)
J2OBJC_FIELD_SETTER(FFTLayout, viewCache_, FFTLRUCache *)
J2OBJC_FIELD_SETTER(FFTLayout, portrait_, FFTLayout_Orientation *)
J2OBJC_FIELD_SETTER(FFTLayout, landscape_, FFTLayout_Orientation *)
J2OBJC_FIELD_SETTER(FFTLayout, currentOrientation_, FFTLayout_Orientation *)
J2OBJC_FIELD_SETTER(FFTLayout, allViews_, JavaUtilLinkedHashSet *)
J2OBJC_FIELD_SETTER(FFTLayout, allViewsToBePresentedToUI_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(FFTLayout, viewMap_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(FFTLayout, propertiesByCategory_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(FFTLayout, lastLeftEdge_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout, lastRightEdge_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout, last_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout, conditionalKeys_, JavaUtilHashSet *)
J2OBJC_FIELD_SETTER(FFTLayout, cache_, FFTLRUCache *)

typedef FFTLayout ComSponbergFluidLayoutLayout;

typedef enum {
  FFTLayout_Direction_RIGHT = 0,
  FFTLayout_Direction_LEFT = 1,
} FFTLayout_Direction;

@interface FFTLayout_DirectionEnum : JavaLangEnum < NSCopying > {
}
+ (IOSObjectArray *)values;
+ (FFTLayout_DirectionEnum *)valueOfWithNSString:(NSString *)name;
- (id)copyWithZone:(NSZone *)zone;

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal;
@end

FOUNDATION_EXPORT BOOL FFTLayout_DirectionEnum_initialized;
J2OBJC_STATIC_INIT(FFTLayout_DirectionEnum)

FOUNDATION_EXPORT FFTLayout_DirectionEnum *FFTLayout_DirectionEnum_values[];

#define FFTLayout_DirectionEnum_RIGHT FFTLayout_DirectionEnum_values[FFTLayout_Direction_RIGHT]
J2OBJC_STATIC_FIELD_GETTER(FFTLayout_DirectionEnum, RIGHT, FFTLayout_DirectionEnum *)

#define FFTLayout_DirectionEnum_LEFT FFTLayout_DirectionEnum_values[FFTLayout_Direction_LEFT]
J2OBJC_STATIC_FIELD_GETTER(FFTLayout_DirectionEnum, LEFT, FFTLayout_DirectionEnum *)

typedef enum {
  FFTLayout_Align_TOP = 0,
  FFTLayout_Align_BOTTOM = 1,
  FFTLayout_Align_LEFT = 2,
  FFTLayout_Align_CENTER = 3,
  FFTLayout_Align_RIGHT = 4,
  FFTLayout_Align_UNASSIGNED = 5,
} FFTLayout_Align;

@interface FFTLayout_AlignEnum : JavaLangEnum < NSCopying > {
}
+ (IOSObjectArray *)values;
+ (FFTLayout_AlignEnum *)valueOfWithNSString:(NSString *)name;
- (id)copyWithZone:(NSZone *)zone;

- (id)initWithNSString:(NSString *)__name withInt:(int)__ordinal;
@end

FOUNDATION_EXPORT BOOL FFTLayout_AlignEnum_initialized;
J2OBJC_STATIC_INIT(FFTLayout_AlignEnum)

FOUNDATION_EXPORT FFTLayout_AlignEnum *FFTLayout_AlignEnum_values[];

#define FFTLayout_AlignEnum_TOP FFTLayout_AlignEnum_values[FFTLayout_Align_TOP]
J2OBJC_STATIC_FIELD_GETTER(FFTLayout_AlignEnum, TOP, FFTLayout_AlignEnum *)

#define FFTLayout_AlignEnum_BOTTOM FFTLayout_AlignEnum_values[FFTLayout_Align_BOTTOM]
J2OBJC_STATIC_FIELD_GETTER(FFTLayout_AlignEnum, BOTTOM, FFTLayout_AlignEnum *)

#define FFTLayout_AlignEnum_LEFT FFTLayout_AlignEnum_values[FFTLayout_Align_LEFT]
J2OBJC_STATIC_FIELD_GETTER(FFTLayout_AlignEnum, LEFT, FFTLayout_AlignEnum *)

#define FFTLayout_AlignEnum_CENTER FFTLayout_AlignEnum_values[FFTLayout_Align_CENTER]
J2OBJC_STATIC_FIELD_GETTER(FFTLayout_AlignEnum, CENTER, FFTLayout_AlignEnum *)

#define FFTLayout_AlignEnum_RIGHT FFTLayout_AlignEnum_values[FFTLayout_Align_RIGHT]
J2OBJC_STATIC_FIELD_GETTER(FFTLayout_AlignEnum, RIGHT, FFTLayout_AlignEnum *)

#define FFTLayout_AlignEnum_UNASSIGNED FFTLayout_AlignEnum_values[FFTLayout_Align_UNASSIGNED]
J2OBJC_STATIC_FIELD_GETTER(FFTLayout_AlignEnum, UNASSIGNED, FFTLayout_AlignEnum *)

@interface FFTLayout_CalculatedHeight : NSObject {
 @public
  float width_;
  double calculatedHeight_;
}

- (id)initWithFloat:(float)width
         withDouble:(double)calculatedHeight;

- (void)copyAllFieldsTo:(FFTLayout_CalculatedHeight *)other;

@end

__attribute__((always_inline)) inline void FFTLayout_CalculatedHeight_init() {}

@interface FFTLayout_LastLayout : NSObject {
 @public
  double width_;
  double height_;
  id<JavaUtilCollection> views_;
}

- (id)init;

- (void)copyAllFieldsTo:(FFTLayout_LastLayout *)other;

@end

__attribute__((always_inline)) inline void FFTLayout_LastLayout_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_LastLayout, views_, id<JavaUtilCollection>)

@interface FFTLayout_Orientation : NSObject {
 @public
  BOOL landscape_;
  JavaUtilArrayList *layers_;
  FFTLayout_Orientation_Layer *currentLayer_;
}

- (id)initWithBoolean:(BOOL)landscape;

- (int)getHorizontalChainOfWithFFTView:(FFTView *)view;

- (void)setDirectionOfWithFFTView:(FFTView *)view
      withFFTLayout_DirectionEnum:(FFTLayout_DirectionEnum *)direction;

- (FFTLayout_DirectionEnum *)getDirectionOfWithFFTView:(FFTView *)view;

- (void)setHorizontalChainWithFFTView:(FFTView *)view;

- (void)setViewsOrienation;

- (void)copyAllFieldsTo:(FFTLayout_Orientation *)other;

@end

__attribute__((always_inline)) inline void FFTLayout_Orientation_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_Orientation, layers_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(FFTLayout_Orientation, currentLayer_, FFTLayout_Orientation_Layer *)

@interface FFTLayout_Orientation_Layer : NSObject {
 @public
  int horizontalChain_;
  BOOL hasAnchor_;
  JavaUtilArrayList *horizontalChains_;
  id<JavaUtilCollection> views_;
  int zIndex_;
  NSString *visibleCondition_;
}

- (id)initWithInt:(int)zIndex;

- (void)copyAllFieldsTo:(FFTLayout_Orientation_Layer *)other;

@end

__attribute__((always_inline)) inline void FFTLayout_Orientation_Layer_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_Orientation_Layer, horizontalChains_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(FFTLayout_Orientation_Layer, views_, id<JavaUtilCollection>)
J2OBJC_FIELD_SETTER(FFTLayout_Orientation_Layer, visibleCondition_, NSString *)

@interface FFTLayout_$1 : NSObject < FFTLayoutAction > {
 @public
  FFTLayout *this$0_;
  BOOL registered_;
  FFTView *val$source_;
  FFTView *val$view_;
}

- (void)run;

- (id)initWithFFTLayout:(FFTLayout *)outer$
            withFFTView:(FFTView *)capture$0
            withFFTView:(FFTView *)capture$1;

- (void)copyAllFieldsTo:(FFTLayout_$1 *)other;

@end

__attribute__((always_inline)) inline void FFTLayout_$1_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$1, this$0_, FFTLayout *)
J2OBJC_FIELD_SETTER(FFTLayout_$1, val$source_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$1, val$view_, FFTView *)

@interface FFTLayout_$2 : NSObject < FFTLayoutAction > {
 @public
  FFTLayout *this$0_;
  BOOL registered_;
  FFTView *val$source_;
  FFTView *val$view_;
}

- (void)run;

- (id)initWithFFTLayout:(FFTLayout *)outer$
            withFFTView:(FFTView *)capture$0
            withFFTView:(FFTView *)capture$1;

- (void)copyAllFieldsTo:(FFTLayout_$2 *)other;

@end

__attribute__((always_inline)) inline void FFTLayout_$2_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$2, this$0_, FFTLayout *)
J2OBJC_FIELD_SETTER(FFTLayout_$2, val$source_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$2, val$view_, FFTView *)

@interface FFTLayout_$3 : NSObject < FFTLayoutAction > {
 @public
  FFTLayout *this$0_;
  BOOL registered_;
  FFTView *val$source_;
  FFTView *val$view_;
}

- (void)run;

- (id)initWithFFTLayout:(FFTLayout *)outer$
            withFFTView:(FFTView *)capture$0
            withFFTView:(FFTView *)capture$1;

- (void)copyAllFieldsTo:(FFTLayout_$3 *)other;

@end

__attribute__((always_inline)) inline void FFTLayout_$3_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$3, this$0_, FFTLayout *)
J2OBJC_FIELD_SETTER(FFTLayout_$3, val$source_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$3, val$view_, FFTView *)

@interface FFTLayout_$4 : NSObject < FFTLayoutAction > {
 @public
  FFTLayout *this$0_;
  BOOL registered_;
  FFTView *val$source_;
  FFTView *val$view_;
}

- (void)run;

- (id)initWithFFTLayout:(FFTLayout *)outer$
            withFFTView:(FFTView *)capture$0
            withFFTView:(FFTView *)capture$1;

- (void)copyAllFieldsTo:(FFTLayout_$4 *)other;

@end

__attribute__((always_inline)) inline void FFTLayout_$4_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$4, this$0_, FFTLayout *)
J2OBJC_FIELD_SETTER(FFTLayout_$4, val$source_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$4, val$view_, FFTView *)

@interface FFTLayout_$5 : NSObject < FFTLayoutAction > {
 @public
  FFTLayout *this$0_;
  BOOL registered_;
  FFTView *val$source_;
  FFTView *val$view_;
}

- (void)run;

- (id)initWithFFTLayout:(FFTLayout *)outer$
            withFFTView:(FFTView *)capture$0
            withFFTView:(FFTView *)capture$1;

- (void)copyAllFieldsTo:(FFTLayout_$5 *)other;

@end

__attribute__((always_inline)) inline void FFTLayout_$5_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$5, this$0_, FFTLayout *)
J2OBJC_FIELD_SETTER(FFTLayout_$5, val$source_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$5, val$view_, FFTView *)

@interface FFTLayout_$6 : NSObject < FFTLayoutAction > {
 @public
  FFTLayout *this$0_;
  BOOL registered_;
  FFTView *val$source_;
  FFTView *val$view_;
}

- (void)run;

- (id)initWithFFTLayout:(FFTLayout *)outer$
            withFFTView:(FFTView *)capture$0
            withFFTView:(FFTView *)capture$1;

- (void)copyAllFieldsTo:(FFTLayout_$6 *)other;

@end

__attribute__((always_inline)) inline void FFTLayout_$6_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$6, this$0_, FFTLayout *)
J2OBJC_FIELD_SETTER(FFTLayout_$6, val$source_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$6, val$view_, FFTView *)

@interface FFTLayout_$7 : NSObject < FFTLayoutAction > {
 @public
  FFTLayout *this$0_;
  BOOL registered_;
  FFTView *val$source_;
  FFTView *val$view_;
}

- (void)run;

- (id)initWithFFTLayout:(FFTLayout *)outer$
            withFFTView:(FFTView *)capture$0
            withFFTView:(FFTView *)capture$1;

- (void)copyAllFieldsTo:(FFTLayout_$7 *)other;

@end

__attribute__((always_inline)) inline void FFTLayout_$7_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$7, this$0_, FFTLayout *)
J2OBJC_FIELD_SETTER(FFTLayout_$7, val$source_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$7, val$view_, FFTView *)

@interface FFTLayout_$8 : NSObject < FFTLayoutAction > {
 @public
  FFTLayout *this$0_;
  BOOL registered_;
  FFTView *val$source_;
  FFTView *val$view_;
}

- (void)run;

- (id)initWithFFTLayout:(FFTLayout *)outer$
            withFFTView:(FFTView *)capture$0
            withFFTView:(FFTView *)capture$1;

- (void)copyAllFieldsTo:(FFTLayout_$8 *)other;

@end

__attribute__((always_inline)) inline void FFTLayout_$8_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$8, this$0_, FFTLayout *)
J2OBJC_FIELD_SETTER(FFTLayout_$8, val$source_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$8, val$view_, FFTView *)

@interface FFTLayout_$9 : NSObject < FFTLayoutAction > {
 @public
  FFTView *val$view_;
  FFTView *val$source_;
}

- (void)run;

- (id)initWithFFTView:(FFTView *)capture$0
          withFFTView:(FFTView *)capture$1;

@end

__attribute__((always_inline)) inline void FFTLayout_$9_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$9, val$view_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$9, val$source_, FFTView *)

@interface FFTLayout_$10 : NSObject < FFTLayoutAction > {
 @public
  FFTView *val$view_;
  FFTView *val$source_;
}

- (void)run;

- (id)initWithFFTView:(FFTView *)capture$0
          withFFTView:(FFTView *)capture$1;

@end

__attribute__((always_inline)) inline void FFTLayout_$10_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$10, val$view_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$10, val$source_, FFTView *)

@interface FFTLayout_$11 : NSObject < FFTLayoutAction > {
 @public
  FFTView *val$view_;
  FFTView *val$source_;
}

- (void)run;

- (id)initWithFFTView:(FFTView *)capture$0
          withFFTView:(FFTView *)capture$1;

@end

__attribute__((always_inline)) inline void FFTLayout_$11_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$11, val$view_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$11, val$source_, FFTView *)

@interface FFTLayout_$12 : NSObject < FFTLayoutAction > {
 @public
  FFTView *val$view_;
  FFTView *val$source_;
}

- (void)run;

- (id)initWithFFTView:(FFTView *)capture$0
          withFFTView:(FFTView *)capture$1;

@end

__attribute__((always_inline)) inline void FFTLayout_$12_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$12, val$view_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$12, val$source_, FFTView *)

@interface FFTLayout_$13 : NSObject < FFTLayoutAction > {
 @public
  FFTView *val$view_;
  FFTView *val$source_;
}

- (void)run;

- (id)initWithFFTView:(FFTView *)capture$0
          withFFTView:(FFTView *)capture$1;

@end

__attribute__((always_inline)) inline void FFTLayout_$13_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$13, val$view_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$13, val$source_, FFTView *)

@interface FFTLayout_$14 : NSObject < FFTLayoutAction > {
 @public
  FFTView *val$view_;
  FFTView *val$source_;
}

- (void)run;

- (id)initWithFFTView:(FFTView *)capture$0
          withFFTView:(FFTView *)capture$1;

@end

__attribute__((always_inline)) inline void FFTLayout_$14_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$14, val$view_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$14, val$source_, FFTView *)

@interface FFTLayout_$15 : NSObject < FFTLayoutAction > {
 @public
  FFTView *val$view_;
  FFTView *val$source_;
}

- (void)run;

- (id)initWithFFTView:(FFTView *)capture$0
          withFFTView:(FFTView *)capture$1;

@end

__attribute__((always_inline)) inline void FFTLayout_$15_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$15, val$view_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$15, val$source_, FFTView *)

@interface FFTLayout_$16 : NSObject < FFTLayoutAction > {
 @public
  FFTView *val$view_;
  FFTView *val$source_;
}

- (void)run;

- (id)initWithFFTView:(FFTView *)capture$0
          withFFTView:(FFTView *)capture$1;

@end

__attribute__((always_inline)) inline void FFTLayout_$16_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$16, val$view_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$16, val$source_, FFTView *)

@interface FFTLayout_$17 : NSObject < FFTLayoutAction > {
 @public
  FFTView *val$view_;
  FFTView *val$source_;
}

- (void)run;

- (id)initWithFFTView:(FFTView *)capture$0
          withFFTView:(FFTView *)capture$1;

@end

__attribute__((always_inline)) inline void FFTLayout_$17_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$17, val$view_, FFTView *)
J2OBJC_FIELD_SETTER(FFTLayout_$17, val$source_, FFTView *)

@interface FFTLayout_$18 : NSObject < FFTDataChangeListener > {
 @public
  FFTLayout *this$0_;
  NSString *val$cacheId_;
}

- (void)dataChangedWithNSString:(NSString *)key
              withNSStringArray:(IOSObjectArray *)subKeys;

- (void)dataRemovedWithNSString:(NSString *)key;

- (id)initWithFFTLayout:(FFTLayout *)outer$
           withNSString:(NSString *)capture$0;

@end

__attribute__((always_inline)) inline void FFTLayout_$18_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$18, this$0_, FFTLayout *)
J2OBJC_FIELD_SETTER(FFTLayout_$18, val$cacheId_, NSString *)

@interface FFTLayout_$19 : NSObject < JavaUtilComparator > {
}

- (int)compareWithId:(FFTLayout_Orientation_Layer *)o1
              withId:(FFTLayout_Orientation_Layer *)o2;

- (id)init;

@end

__attribute__((always_inline)) inline void FFTLayout_$19_init() {}

@interface FFTLayout_$20 : NSObject < FFTDataChangeListener > {
 @public
  FFTLayout *this$0_;
  NSString *val$dataModelPrefixFinal_;
}

- (void)dataChangedWithNSString:(NSString *)key
              withNSStringArray:(IOSObjectArray *)subKeys;

- (void)dataRemovedWithNSString:(NSString *)key;

- (id)initWithFFTLayout:(FFTLayout *)outer$
           withNSString:(NSString *)capture$0;

@end

__attribute__((always_inline)) inline void FFTLayout_$20_init() {}

J2OBJC_FIELD_SETTER(FFTLayout_$20, this$0_, FFTLayout *)
J2OBJC_FIELD_SETTER(FFTLayout_$20, val$dataModelPrefixFinal_, NSString *)

#endif // _FFTLayout_H_
