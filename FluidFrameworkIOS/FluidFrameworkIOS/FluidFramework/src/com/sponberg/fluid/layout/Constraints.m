//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-delomboked/com/sponberg/fluid/layout/Constraints.java
//

#include "com/sponberg/fluid/layout/Constraints.h"
#include "com/sponberg/fluid/layout/Coord.h"
#include "com/sponberg/fluid/layout/Length.h"

@implementation FFTConstraints

- (NSString *)description {
  return [NSString stringWithFormat:@"Constraints(x=%@, y=%@, x2=%@, y2=%@, width=%@, height=%@)", [self getX], [self getY], [self getX2], [self getY2], [self getWidth], [self getHeight]];
}

- (FFTCoord *)getX {
  return self->x_;
}

- (FFTCoord *)getY {
  return self->y_;
}

- (FFTCoord *)getX2 {
  return self->x2_;
}

- (FFTCoord *)getY2 {
  return self->y2_;
}

- (FFTLength *)getWidth {
  return self->width_;
}

- (FFTLength *)getHeight {
  return self->height_;
}

- (void)setXWithFFTCoord:(FFTCoord *)x {
  self->x_ = x;
}

- (void)setYWithFFTCoord:(FFTCoord *)y {
  self->y_ = y;
}

- (void)setX2WithFFTCoord:(FFTCoord *)x2 {
  self->x2_ = x2;
}

- (void)setY2WithFFTCoord:(FFTCoord *)y2 {
  self->y2_ = y2;
}

- (void)setWidthWithFFTLength:(FFTLength *)width {
  self->width_ = width;
}

- (void)setHeightWithFFTLength:(FFTLength *)height {
  self->height_ = height;
}

- (BOOL)isEqual:(id)o {
  if (o == self) return YES;
  if (!([o isKindOfClass:[FFTConstraints class]])) return NO;
  FFTConstraints *other = (FFTConstraints *) check_class_cast(o, [FFTConstraints class]);
  if (![((FFTConstraints *) nil_chk(other)) canEqualWithId:(id) check_class_cast(self, [NSObject class])]) return NO;
  id this$x = [self getX];
  id other$x = [other getX];
  if (this$x == nil ? other$x != nil : ![this$x isEqual:other$x]) return NO;
  id this$y = [self getY];
  id other$y = [other getY];
  if (this$y == nil ? other$y != nil : ![this$y isEqual:other$y]) return NO;
  id this$x2 = [self getX2];
  id other$x2 = [other getX2];
  if (this$x2 == nil ? other$x2 != nil : ![this$x2 isEqual:other$x2]) return NO;
  id this$y2 = [self getY2];
  id other$y2 = [other getY2];
  if (this$y2 == nil ? other$y2 != nil : ![this$y2 isEqual:other$y2]) return NO;
  id this$width = [self getWidth];
  id other$width = [other getWidth];
  if (this$width == nil ? other$width != nil : ![this$width isEqual:other$width]) return NO;
  id this$height = [self getHeight];
  id other$height = [other getHeight];
  if (this$height == nil ? other$height != nil : ![this$height isEqual:other$height]) return NO;
  return YES;
}

- (BOOL)canEqualWithId:(id)other {
  return [other isKindOfClass:[FFTConstraints class]];
}

- (NSUInteger)hash {
  int PRIME = 59;
  int result = 1;
  id $x = [self getX];
  result = result * PRIME + ($x == nil ? 0 : ((int) [$x hash]));
  id $y = [self getY];
  result = result * PRIME + ($y == nil ? 0 : ((int) [$y hash]));
  id $x2 = [self getX2];
  result = result * PRIME + ($x2 == nil ? 0 : ((int) [$x2 hash]));
  id $y2 = [self getY2];
  result = result * PRIME + ($y2 == nil ? 0 : ((int) [$y2 hash]));
  id $width = [self getWidth];
  result = result * PRIME + ($width == nil ? 0 : ((int) [$width hash]));
  id $height = [self getHeight];
  result = result * PRIME + ($height == nil ? 0 : ((int) [$height hash]));
  return result;
}

- (id)init {
  return [super init];
}

- (void)copyAllFieldsTo:(FFTConstraints *)other {
  [super copyAllFieldsTo:other];
  other->height_ = height_;
  other->width_ = width_;
  other->x_ = x_;
  other->x2_ = x2_;
  other->y_ = y_;
  other->y2_ = y2_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "getX", NULL, "Lcom.sponberg.fluid.layout.Coord;", 0x1, NULL },
    { "getY", NULL, "Lcom.sponberg.fluid.layout.Coord;", 0x1, NULL },
    { "getX2", NULL, "Lcom.sponberg.fluid.layout.Coord;", 0x1, NULL },
    { "getY2", NULL, "Lcom.sponberg.fluid.layout.Coord;", 0x1, NULL },
    { "getWidth", NULL, "Lcom.sponberg.fluid.layout.Length;", 0x1, NULL },
    { "getHeight", NULL, "Lcom.sponberg.fluid.layout.Length;", 0x1, NULL },
    { "setXWithFFTCoord:", "setX", "V", 0x1, NULL },
    { "setYWithFFTCoord:", "setY", "V", 0x1, NULL },
    { "setX2WithFFTCoord:", "setX2", "V", 0x1, NULL },
    { "setY2WithFFTCoord:", "setY2", "V", 0x1, NULL },
    { "setWidthWithFFTLength:", "setWidth", "V", 0x1, NULL },
    { "setHeightWithFFTLength:", "setHeight", "V", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "canEqualWithId:", "canEqual", "Z", 0x4, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "x_", NULL, 0x1, "Lcom.sponberg.fluid.layout.Coord;", NULL,  },
    { "y_", NULL, 0x1, "Lcom.sponberg.fluid.layout.Coord;", NULL,  },
    { "x2_", NULL, 0x1, "Lcom.sponberg.fluid.layout.Coord;", NULL,  },
    { "y2_", NULL, 0x1, "Lcom.sponberg.fluid.layout.Coord;", NULL,  },
    { "width_", NULL, 0x1, "Lcom.sponberg.fluid.layout.Length;", NULL,  },
    { "height_", NULL, 0x1, "Lcom.sponberg.fluid.layout.Length;", NULL,  },
  };
  static J2ObjcClassInfo _FFTConstraints = { "Constraints", "com.sponberg.fluid.layout", NULL, 0x1, 17, methods, 6, fields, 0, NULL};
  return &_FFTConstraints;
}

@end
