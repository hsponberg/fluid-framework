//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-delomboked/com/sponberg/fluid/layout/ViewBehaviorSubviewRepeat.java
//

#include "IOSClass.h"
#include "com/sponberg/fluid/FluidApp.h"
#include "com/sponberg/fluid/GlobalState.h"
#include "com/sponberg/fluid/layout/DataModelManager.h"
#include "com/sponberg/fluid/layout/Layout.h"
#include "com/sponberg/fluid/layout/PrecomputeLayoutManager.h"
#include "com/sponberg/fluid/layout/View.h"
#include "com/sponberg/fluid/layout/ViewBehavior.h"
#include "com/sponberg/fluid/layout/ViewBehaviorSubviewRepeat.h"
#include "com/sponberg/fluid/layout/ViewPosition.h"
#include "com/sponberg/fluid/util/KeyValueList.h"
#include "java/lang/Double.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/util/Collection.h"
#include "java/util/List.h"

@implementation FFTViewBehaviorSubviewRepeat

- (id)initWithFFTKeyValueList:(id<FFTKeyValueList>)properties {
  if (self = [super initWithNSString:FFTViewBehavior_get_subviewRepeat_() withFFTKeyValueList:properties]) {
    self->subview_ViewBehaviorSubviewRepeat_ = [FFTViewBehavior getStringPropertyWithNSString:@"subview" withNSString:nil withFFTKeyValueList:properties];
    self->key_ = [FFTViewBehavior getStringPropertyWithNSString:@"key" withNSString:nil withFFTKeyValueList:properties];
    if (self->key_ == nil) {
      @throw [[JavaLangRuntimeException alloc] initWithNSString:@"key is required"];
    }
  }
  return self;
}

- (BOOL)supportsHeightCompute {
  return YES;
}

- (float)computeHeightWithBoolean:(BOOL)landscape
                     withNSString:(NSString *)dataModelPrefix
                      withFFTView:(FFTView *)view
                      withBoolean:(BOOL)useCache {
  JavaLangDouble *width = [((FFTView *) nil_chk(view)) getWidth];
  if (width == nil) {
    @throw [[JavaLangRuntimeException alloc] initWithNSString:@"View's width must be set before calling computeHeight"];
  }
  id<JavaUtilList> list = [((FFTDataModelManager *) nil_chk([((FFTFluidApp *) nil_chk(FFTGlobalState_get_fluidApp__())) getDataModelManager])) getValueListWithNSString:dataModelPrefix withNSString:key_];
  int size = (list == nil) ? 0 : [list size];
  double height = 0;
  if (dataModelPrefix == nil || [dataModelPrefix isEqual:@""]) {
    dataModelPrefix = [NSString stringWithFormat:@"%@.", key_];
  }
  else {
    dataModelPrefix = [NSString stringWithFormat:@"%@%@", dataModelPrefix, [NSString stringWithFormat:@".%@.", key_]];
  }
  for (int index = 0; index < size; index++) {
    height += [((FFTLayout *) nil_chk([FFTGlobalState_get_fluidApp__() getLayoutWithNSString:subview_ViewBehaviorSubviewRepeat_])) calculateHeightWithBoolean:landscape withFloat:[((JavaLangDouble *) nil_chk(width)) floatValue] withNSString:[NSString stringWithFormat:@"%@%d", dataModelPrefix, index] withBoolean:useCache];
  }
  return (float) height;
}

- (void)precomputeViewPositionsWithBoolean:(BOOL)landscape
                              withNSString:(NSString *)precomputePrefix
                       withFFTViewPosition:(FFTViewPosition *)view
                              withNSString:(NSString *)viewPathPrefixView
                    withJavaUtilCollection:(id<JavaUtilCollection>)newViewPositions {
  NSString *layoutId = [((FFTViewBehaviorSubviewRepeat *) nil_chk(((FFTViewBehaviorSubviewRepeat *) check_class_cast([((FFTViewPosition *) nil_chk(view)) getViewBehavior], [FFTViewBehaviorSubviewRepeat class])))) getSubview];
  FFTLayout *subviewLayout = [((FFTFluidApp *) nil_chk(FFTGlobalState_get_fluidApp__())) getLayoutWithNSString:layoutId];
  if ([((FFTLayout *) nil_chk(subviewLayout)) isPrecomputedPositions]) {
    NSString *precomputePrefixView = [FFTDataModelManager getFullKeyWithNSString:precomputePrefix withNSString:[view getKey]];
    id<JavaUtilList> list = [((FFTDataModelManager *) nil_chk([FFTGlobalState_get_fluidApp__() getDataModelManager])) getValueListWithNSString:precomputePrefixView];
    int size = (list == nil) ? 0 : [list size];
    precomputePrefixView = [NSString stringWithFormat:@"%@.", precomputePrefixView];
    viewPathPrefixView = [NSString stringWithFormat:@"%@.", viewPathPrefixView];
    for (int index = 0; index < size; index++) {
      NSString *viewPathPrefixViewSection = [NSString stringWithFormat:@"%@%d", viewPathPrefixView, index];
      double subviewHeight = [FFTPrecomputeLayoutManager precomputeViewPositionsForWithFFTLayout:subviewLayout withBoolean:landscape withNSString:viewPathPrefixViewSection withNSString:[NSString stringWithFormat:@"%@%d", precomputePrefixView, index] withFFTViewPosition:view withFFTTableRowWithIdAndHeight:nil withJavaUtilCollection:newViewPositions];
      FFTViewPosition *subviewPosition = [[FFTViewPosition alloc] initWithNSString:viewPathPrefixViewSection withInt:(int) [JavaLangMath roundWithDouble:subviewHeight]];
      [((id<JavaUtilCollection>) nil_chk(newViewPositions)) addWithId:subviewPosition];
      [((FFTPrecomputeLayoutManager *) nil_chk([FFTGlobalState_get_fluidApp__() getPrecomputeLayoutManager])) setViewPositionWithNSString:viewPathPrefixViewSection withFFTViewPosition:subviewPosition];
    }
  }
}

- (NSString *)description {
  return [NSString stringWithFormat:@"ViewBehaviorSubviewRepeat(subview=%@, key=%@)", [self getSubview], [self getKey]];
}

- (NSString *)getSubview {
  return self->subview_ViewBehaviorSubviewRepeat_;
}

- (NSString *)getKey {
  return self->key_;
}

- (void)copyAllFieldsTo:(FFTViewBehaviorSubviewRepeat *)other {
  [super copyAllFieldsTo:other];
  other->key_ = key_;
  other->subview_ViewBehaviorSubviewRepeat_ = subview_ViewBehaviorSubviewRepeat_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithFFTKeyValueList:", "ViewBehaviorSubviewRepeat", NULL, 0x1, NULL },
    { "supportsHeightCompute", NULL, "Z", 0x4, NULL },
    { "computeHeightWithBoolean:withNSString:withFFTView:withBoolean:", "computeHeight", "F", 0x1, NULL },
    { "precomputeViewPositionsWithBoolean:withNSString:withFFTViewPosition:withNSString:withJavaUtilCollection:", "precomputeViewPositions", "V", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "getSubview", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getKey", NULL, "Ljava.lang.String;", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "subview_ViewBehaviorSubviewRepeat_", "subview", 0x12, "Ljava.lang.String;", NULL,  },
    { "key_", NULL, 0x12, "Ljava.lang.String;", NULL,  },
  };
  static J2ObjcClassInfo _FFTViewBehaviorSubviewRepeat = { "ViewBehaviorSubviewRepeat", "com.sponberg.fluid.layout", NULL, 0x1, 7, methods, 2, fields, 0, NULL};
  return &_FFTViewBehaviorSubviewRepeat;
}

@end
