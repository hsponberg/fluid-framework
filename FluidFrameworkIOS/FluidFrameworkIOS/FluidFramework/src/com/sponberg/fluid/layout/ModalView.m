//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-delomboked/com/sponberg/fluid/layout/ModalView.java
//

#include "com/sponberg/fluid/layout/ModalView.h"
#include "java/lang/Boolean.h"
#include "java/util/ArrayList.h"

@implementation FFTModalView

NSString * FFTModalView_FluidLayout_ = @"FluidLayout";
NSString * FFTModalView_FluidLayoutFullScreen_ = @"FluidLayoutFullScreen";
NSString * FFTModalView_ImagePicker_ = @"ImagePicker";
NSString * FFTModalView_Confirmation_ = @"NativeConfirmation";
NSString * FFTModalView_WaitingDialog_ = @"NativeWaitingDialog";
NSString * FFTModalView_Custom_ = @"Custom";

- (id)initWithNSString:(NSString *)systemId {
  if (self = [super init]) {
    actionListeners_ = [[JavaUtilArrayList alloc] init];
    userCancelable_ = YES;
    self->systemId_ = systemId;
  }
  return self;
}

- (void)addActionListenerWithFFTModalView_ModalActionListener:(id<FFTModalView_ModalActionListener>)al {
  [((JavaUtilArrayList *) nil_chk(self->actionListeners_)) addWithId:al];
}

- (void)modalCanceled {
  for (id<FFTModalView_ModalActionListener> __strong l in nil_chk(actionListeners_)) {
    [((id<FFTModalView_ModalActionListener>) nil_chk(l)) modalCanceled];
  }
}

- (void)modalCompleteWithId:(id)userDataObject {
  for (id<FFTModalView_ModalActionListener> __strong l in nil_chk(actionListeners_)) {
    [((id<FFTModalView_ModalActionListener>) nil_chk(l)) modalCompleteWithId:userDataObject];
  }
}

- (NSString *)description {
  return [NSString stringWithFormat:@"ModalView(actionListeners=%@, systemId=%@, userData=%@, fluidData=%@, userSelection=%@, userCancelable=%@, tag=%@)", [self getActionListeners], [self getSystemId], [self getUserData], [self getFluidData], [self getUserSelection], [JavaLangBoolean toStringWithBoolean:[self isUserCancelable]], [self getTag]];
}

- (JavaUtilArrayList *)getActionListeners {
  return self->actionListeners_;
}

- (NSString *)getSystemId {
  return self->systemId_;
}

- (id)getUserData {
  return self->userData_;
}

- (id)getFluidData {
  return self->fluidData_;
}

- (id)getUserSelection {
  return self->userSelection_;
}

- (BOOL)isUserCancelable {
  return self->userCancelable_;
}

- (NSString *)getTag {
  return self->tag_;
}

- (void)setActionListenersWithJavaUtilArrayList:(JavaUtilArrayList *)actionListeners {
  self->actionListeners_ = actionListeners;
}

- (void)setUserDataWithId:(id)userData {
  self->userData_ = userData;
}

- (void)setFluidDataWithId:(id)fluidData {
  self->fluidData_ = fluidData;
}

- (void)setUserSelectionWithId:(id)userSelection {
  self->userSelection_ = userSelection;
}

- (void)setUserCancelableWithBoolean:(BOOL)userCancelable {
  self->userCancelable_ = userCancelable;
}

- (void)setTagWithNSString:(NSString *)tag {
  self->tag_ = tag;
}

- (BOOL)isEqual:(id)o {
  if (o == self) return YES;
  if (!([o isKindOfClass:[FFTModalView class]])) return NO;
  FFTModalView *other = (FFTModalView *) check_class_cast(o, [FFTModalView class]);
  if (![((FFTModalView *) nil_chk(other)) canEqualWithId:(id) check_class_cast(self, [NSObject class])]) return NO;
  id this$actionListeners = [self getActionListeners];
  id other$actionListeners = [other getActionListeners];
  if (this$actionListeners == nil ? other$actionListeners != nil : ![this$actionListeners isEqual:other$actionListeners]) return NO;
  id this$systemId = [self getSystemId];
  id other$systemId = [other getSystemId];
  if (this$systemId == nil ? other$systemId != nil : ![this$systemId isEqual:other$systemId]) return NO;
  id this$userData = [self getUserData];
  id other$userData = [other getUserData];
  if (this$userData == nil ? other$userData != nil : ![this$userData isEqual:other$userData]) return NO;
  id this$fluidData = [self getFluidData];
  id other$fluidData = [other getFluidData];
  if (this$fluidData == nil ? other$fluidData != nil : ![this$fluidData isEqual:other$fluidData]) return NO;
  id this$userSelection = [self getUserSelection];
  id other$userSelection = [other getUserSelection];
  if (this$userSelection == nil ? other$userSelection != nil : ![this$userSelection isEqual:other$userSelection]) return NO;
  if ([self isUserCancelable] != [other isUserCancelable]) return NO;
  id this$tag = [self getTag];
  id other$tag = [other getTag];
  if (this$tag == nil ? other$tag != nil : ![this$tag isEqual:other$tag]) return NO;
  return YES;
}

- (BOOL)canEqualWithId:(id)other {
  return [other isKindOfClass:[FFTModalView class]];
}

- (NSUInteger)hash {
  int PRIME = 59;
  int result = 1;
  id $actionListeners = [self getActionListeners];
  result = result * PRIME + ($actionListeners == nil ? 0 : ((int) [$actionListeners hash]));
  id $systemId = [self getSystemId];
  result = result * PRIME + ($systemId == nil ? 0 : ((int) [$systemId hash]));
  id $userData = [self getUserData];
  result = result * PRIME + ($userData == nil ? 0 : ((int) [$userData hash]));
  id $fluidData = [self getFluidData];
  result = result * PRIME + ($fluidData == nil ? 0 : ((int) [$fluidData hash]));
  id $userSelection = [self getUserSelection];
  result = result * PRIME + ($userSelection == nil ? 0 : ((int) [$userSelection hash]));
  result = result * PRIME + ([self isUserCancelable] ? 79 : 97);
  id $tag = [self getTag];
  result = result * PRIME + ($tag == nil ? 0 : ((int) [$tag hash]));
  return result;
}

- (void)copyAllFieldsTo:(FFTModalView *)other {
  [super copyAllFieldsTo:other];
  other->actionListeners_ = actionListeners_;
  other->fluidData_ = fluidData_;
  other->systemId_ = systemId_;
  other->tag_ = tag_;
  other->userCancelable_ = userCancelable_;
  other->userData_ = userData_;
  other->userSelection_ = userSelection_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "ModalView", NULL, 0x1, NULL },
    { "addActionListenerWithFFTModalView_ModalActionListener:", "addActionListener", "V", 0x1, NULL },
    { "modalCanceled", NULL, "V", 0x1, NULL },
    { "modalCompleteWithId:", "modalComplete", "V", 0x1, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "getActionListeners", NULL, "Ljava.util.ArrayList;", 0x1, NULL },
    { "getSystemId", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getUserData", NULL, "Ljava.lang.Object;", 0x1, NULL },
    { "getFluidData", NULL, "Ljava.lang.Object;", 0x1, NULL },
    { "getUserSelection", NULL, "Ljava.lang.Object;", 0x1, NULL },
    { "isUserCancelable", NULL, "Z", 0x1, NULL },
    { "getTag", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "setActionListenersWithJavaUtilArrayList:", "setActionListeners", "V", 0x1, NULL },
    { "setUserDataWithId:", "setUserData", "V", 0x1, NULL },
    { "setFluidDataWithId:", "setFluidData", "V", 0x1, NULL },
    { "setUserSelectionWithId:", "setUserSelection", "V", 0x1, NULL },
    { "setUserCancelableWithBoolean:", "setUserCancelable", "V", 0x1, NULL },
    { "setTagWithNSString:", "setTag", "V", 0x1, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "canEqualWithId:", "canEqual", "Z", 0x4, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "FluidLayout_", NULL, 0x19, "Ljava.lang.String;", &FFTModalView_FluidLayout_,  },
    { "FluidLayoutFullScreen_", NULL, 0x19, "Ljava.lang.String;", &FFTModalView_FluidLayoutFullScreen_,  },
    { "ImagePicker_", NULL, 0x19, "Ljava.lang.String;", &FFTModalView_ImagePicker_,  },
    { "Confirmation_", NULL, 0x19, "Ljava.lang.String;", &FFTModalView_Confirmation_,  },
    { "WaitingDialog_", NULL, 0x19, "Ljava.lang.String;", &FFTModalView_WaitingDialog_,  },
    { "Custom_", NULL, 0x19, "Ljava.lang.String;", &FFTModalView_Custom_,  },
    { "actionListeners_", NULL, 0x0, "Ljava.util.ArrayList;", NULL,  },
    { "systemId_", NULL, 0x10, "Ljava.lang.String;", NULL,  },
    { "userData_", NULL, 0x0, "Ljava.lang.Object;", NULL,  },
    { "fluidData_", NULL, 0x0, "Ljava.lang.Object;", NULL,  },
    { "userSelection_", NULL, 0x0, "Ljava.lang.Object;", NULL,  },
    { "userCancelable_", NULL, 0x0, "Z", NULL,  },
    { "tag_", NULL, 0x0, "Ljava.lang.String;", NULL,  },
  };
  static J2ObjcClassInfo _FFTModalView = { "ModalView", "com.sponberg.fluid.layout", NULL, 0x1, 21, methods, 13, fields, 0, NULL};
  return &_FFTModalView;
}

@end

@interface FFTModalView_ModalActionListener : NSObject
@end

@implementation FFTModalView_ModalActionListener

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "modalCompleteWithId:", "modalComplete", "V", 0x401, NULL },
    { "modalCanceled", NULL, "V", 0x401, NULL },
  };
  static J2ObjcClassInfo _FFTModalView_ModalActionListener = { "ModalActionListener", "com.sponberg.fluid.layout", "ModalView", 0x209, 2, methods, 0, NULL, 0, NULL};
  return &_FFTModalView_ModalActionListener;
}

@end

@implementation FFTModalView_ModalActionListenerAdapter

- (void)modalCompleteWithId:(id)userData {
}

- (void)modalCanceled {
}

- (id)init {
  return [super init];
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "modalCompleteWithId:", "modalComplete", "V", 0x1, NULL },
    { "modalCanceled", NULL, "V", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcClassInfo _FFTModalView_ModalActionListenerAdapter = { "ModalActionListenerAdapter", "com.sponberg.fluid.layout", "ModalView", 0x9, 3, methods, 0, NULL, 0, NULL};
  return &_FFTModalView_ModalActionListenerAdapter;
}

@end

@implementation FFTModalView_ModalViewConfirmation

- (NSString *)description {
  return [NSString stringWithFormat:@"ModalView.ModalViewConfirmation(title=%@, message=%@, ok=%@, cancel=%@)", [self getTitle], [self getMessage], [self getOk], [self getCancel]];
}

- (NSString *)getTitle {
  return self->title_;
}

- (NSString *)getMessage {
  return self->message_;
}

- (NSString *)getOk {
  return self->ok_;
}

- (NSString *)getCancel {
  return self->cancel_;
}

- (void)setTitleWithNSString:(NSString *)title {
  self->title_ = title;
}

- (void)setMessageWithNSString:(NSString *)message {
  self->message_ = message;
}

- (void)setOkWithNSString:(NSString *)ok {
  self->ok_ = ok;
}

- (void)setCancelWithNSString:(NSString *)cancel {
  self->cancel_ = cancel;
}

- (id)init {
  return [super init];
}

- (void)copyAllFieldsTo:(FFTModalView_ModalViewConfirmation *)other {
  [super copyAllFieldsTo:other];
  other->cancel_ = cancel_;
  other->message_ = message_;
  other->ok_ = ok_;
  other->title_ = title_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "getTitle", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getMessage", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getOk", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getCancel", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "setTitleWithNSString:", "setTitle", "V", 0x1, NULL },
    { "setMessageWithNSString:", "setMessage", "V", 0x1, NULL },
    { "setOkWithNSString:", "setOk", "V", 0x1, NULL },
    { "setCancelWithNSString:", "setCancel", "V", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "title_", NULL, 0x0, "Ljava.lang.String;", NULL,  },
    { "message_", NULL, 0x0, "Ljava.lang.String;", NULL,  },
    { "ok_", NULL, 0x0, "Ljava.lang.String;", NULL,  },
    { "cancel_", NULL, 0x0, "Ljava.lang.String;", NULL,  },
  };
  static J2ObjcClassInfo _FFTModalView_ModalViewConfirmation = { "ModalViewConfirmation", "com.sponberg.fluid.layout", "ModalView", 0x9, 10, methods, 4, fields, 0, NULL};
  return &_FFTModalView_ModalViewConfirmation;
}

@end

@implementation FFTModalView_ModalViewWaitingDialog

- (NSString *)description {
  return [NSString stringWithFormat:@"ModalView.ModalViewWaitingDialog(title=%@, message=%@)", [self getTitle], [self getMessage]];
}

- (NSString *)getTitle {
  return self->title_;
}

- (NSString *)getMessage {
  return self->message_;
}

- (void)setTitleWithNSString:(NSString *)title {
  self->title_ = title;
}

- (void)setMessageWithNSString:(NSString *)message {
  self->message_ = message;
}

- (id)init {
  return [super init];
}

- (void)copyAllFieldsTo:(FFTModalView_ModalViewWaitingDialog *)other {
  [super copyAllFieldsTo:other];
  other->message_ = message_;
  other->title_ = title_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "getTitle", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getMessage", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "setTitleWithNSString:", "setTitle", "V", 0x1, NULL },
    { "setMessageWithNSString:", "setMessage", "V", 0x1, NULL },
    { "init", NULL, NULL, 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "title_", NULL, 0x0, "Ljava.lang.String;", NULL,  },
    { "message_", NULL, 0x0, "Ljava.lang.String;", NULL,  },
  };
  static J2ObjcClassInfo _FFTModalView_ModalViewWaitingDialog = { "ModalViewWaitingDialog", "com.sponberg.fluid.layout", "ModalView", 0x9, 6, methods, 2, fields, 0, NULL};
  return &_FFTModalView_ModalViewWaitingDialog;
}

@end
