//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src-external/org/slf4j/helpers/FormattingTuple.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/System.h"
#include "java/lang/Throwable.h"
#include "org/slf4j/helpers/FormattingTuple.h"

BOOL OrgSlf4jHelpersFormattingTuple_initialized = NO;

@implementation OrgSlf4jHelpersFormattingTuple

OrgSlf4jHelpersFormattingTuple * OrgSlf4jHelpersFormattingTuple_NULL__;

- (id)initWithNSString:(NSString *)message {
  return [self initOrgSlf4jHelpersFormattingTupleWithNSString:message withNSObjectArray:nil withJavaLangThrowable:nil];
}

- (id)initOrgSlf4jHelpersFormattingTupleWithNSString:(NSString *)message
                                   withNSObjectArray:(IOSObjectArray *)argArray
                               withJavaLangThrowable:(JavaLangThrowable *)throwable {
  if (self = [super init]) {
    self->message_ = message;
    self->throwable_ = throwable;
    if (throwable == nil) {
      self->argArray_ = argArray;
    }
    else {
      self->argArray_ = [OrgSlf4jHelpersFormattingTuple trimmedCopyWithNSObjectArray:argArray];
    }
  }
  return self;
}

- (id)initWithNSString:(NSString *)message
     withNSObjectArray:(IOSObjectArray *)argArray
 withJavaLangThrowable:(JavaLangThrowable *)throwable {
  return [self initOrgSlf4jHelpersFormattingTupleWithNSString:message withNSObjectArray:argArray withJavaLangThrowable:throwable];
}

+ (IOSObjectArray *)trimmedCopyWithNSObjectArray:(IOSObjectArray *)argArray {
  if (argArray == nil || (int) [argArray count] == 0) {
    @throw [[JavaLangIllegalStateException alloc] initWithNSString:@"non-sensical empty or null argument array"];
  }
  int trimemdLen = (int) [((IOSObjectArray *) nil_chk(argArray)) count] - 1;
  IOSObjectArray *trimmed = [IOSObjectArray arrayWithLength:trimemdLen type:[IOSClass classWithClass:[NSObject class]]];
  [JavaLangSystem arraycopyWithId:argArray withInt:0 withId:trimmed withInt:0 withInt:trimemdLen];
  return trimmed;
}

- (NSString *)getMessage {
  return message_;
}

- (IOSObjectArray *)getArgArray {
  return argArray_;
}

- (JavaLangThrowable *)getThrowable {
  return throwable_;
}

+ (void)initialize {
  if (self == [OrgSlf4jHelpersFormattingTuple class]) {
    OrgSlf4jHelpersFormattingTuple_NULL__ = [[OrgSlf4jHelpersFormattingTuple alloc] initWithNSString:nil];
    OrgSlf4jHelpersFormattingTuple_initialized = YES;
  }
}

- (void)copyAllFieldsTo:(OrgSlf4jHelpersFormattingTuple *)other {
  [super copyAllFieldsTo:other];
  other->argArray_ = argArray_;
  other->message_ = message_;
  other->throwable_ = throwable_;
}

+ (J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "FormattingTuple", NULL, 0x1, NULL },
    { "initWithNSString:withNSObjectArray:withJavaLangThrowable:", "FormattingTuple", NULL, 0x1, NULL },
    { "trimmedCopyWithNSObjectArray:", "trimmedCopy", "[Ljava.lang.Object;", 0x8, NULL },
    { "getMessage", NULL, "Ljava.lang.String;", 0x1, NULL },
    { "getArgArray", NULL, "[Ljava.lang.Object;", 0x1, NULL },
    { "getThrowable", NULL, "Ljava.lang.Throwable;", 0x1, NULL },
  };
  static J2ObjcFieldInfo fields[] = {
    { "NULL__", "NULL", 0x9, "Lorg.slf4j.helpers.FormattingTuple;", &OrgSlf4jHelpersFormattingTuple_NULL__,  },
    { "message_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
    { "throwable_", NULL, 0x2, "Ljava.lang.Throwable;", NULL,  },
    { "argArray_", NULL, 0x2, "[Ljava.lang.Object;", NULL,  },
  };
  static J2ObjcClassInfo _OrgSlf4jHelpersFormattingTuple = { "FormattingTuple", "org.slf4j.helpers", NULL, 0x1, 6, methods, 4, fields, 0, NULL};
  return &_OrgSlf4jHelpersFormattingTuple;
}

@end
